{"body": [{"indent": 0, "text": ["Render node examples"], "type": "title", "level": 0}, {"body": [{"body": [{"body": [{"body": [], "container": true, "type": "grouped_examples", "key": null}, {"body": [{"body": [{"indent": 0, "type": "title", "text": ["FetchROP"]}, {"indent": 0, "type": "para", "text": ["This example demonstrates the use of a Fetch ROP to make render dependency\nconnections to ROP nodes that are in a different network. A noise COP is \nused to generate a texture just-in-time for a surface which is rendered by \nmantra."]}], "text": "FetchROP", "type": "load_example", "attrs": {"path": "/examples/nodes/out/fetch/FetchROP", "examplefile": "/examples/nodes/out/fetch/FetchROP.otl", "examplefor": "/nodes/out/fetch"}}], "container": true, "type": "grouped_examples", "key": "/nodes/out/fetch"}, {"body": [{"body": [{"type": "title", "indent": 0, "text": ["AmbientOcclusion"]}, {"type": "para", "indent": 0, "text": ["Ambient occlusion is a fast technique for producing soft, diffuse lighting in open spaces by using ray tracing. It is computed by determining how much of the hemisphere above a point is blocked by other surfaces in the scene, and producing a darker lighting value when the point is heavily occluded. This technique can be useful when you need a GI-like effect without paying the price for full global illumination."]}, {"type": "para", "indent": 0, "text": ["With this particular example, an Ambient Occlusion light and some geometry is provided in the form of a Digital Asset. An Environment Light was used, and it\u2019s parameters were promoted for easy access."]}, {"type": "para", "indent": 0, "text": [{"_hs_sc": true, "text": "", "value": "/examples/nodes/out/ifd/ao.jpg", "fullpath": "/examples/nodes/out/ifd/ao.jpg", "scheme": "Image", "type": "link"}]}, {"type": "para", "indent": 0, "text": ["Decreasing the sample count allows you to improve render time at the expense of some additional noise in the render. The following render uses the same shader as the image above but decreases the samples from the default of 256 to 16. This value is set on the ", {"text": ["Sampling Quality"], "type": "strong"}, " under the Render Options tab of the Light."]}, {"type": "para", "indent": 0, "text": [{"_hs_sc": true, "text": "", "value": "/examples/nodes/out/ifd/ao_lowsample.jpg", "fullpath": "/examples/nodes/out/ifd/ao_lowsample.jpg", "scheme": "Image", "type": "link"}]}, {"type": "para", "indent": 0, "text": ["Environment Maps"]}, {"type": "para", "indent": 0, "text": ["If you have a smooth environment map, it is possible to replace the global background color (white) with the value from an environment map. You can also enable the Sky Environment Map under the Sky Environment Map tab."]}, {"type": "para", "indent": 0, "text": [{"_hs_sc": true, "text": "", "value": "/examples/nodes/out/ifd/ao_envmap.jpg", "fullpath": "/examples/nodes/out/ifd/ao_envmap.jpg", "scheme": "Image", "type": "link"}]}], "text": "AmbientOcclusion", "type": "load_example", "attrs": {"path": "/examples/nodes/out/ifd/AmbientOcclusion", "examplefile": "/examples/nodes/out/ifd/AmbientOcclusion.otl", "examplefor": "/nodes/out/ifd"}}, {"body": [{"indent": 0, "type": "title", "text": ["MotionVector"]}, {"indent": 0, "type": "para", "text": ["The example demonstrates how to generate a motion vector layer \nfor post-velocity compositing. Load the example and render 5 \nframes. Then in the image viewer, switch from 'C' (colour) \nto 'motion_vector' to see the results."]}], "text": "MotionVector", "type": "load_example", "attrs": {"path": "/examples/nodes/out/ifd/MotionVector", "examplefile": "/examples/nodes/out/ifd/MotionVector.otl", "examplefor": "/nodes/out/ifd"}}, {"body": [{"indent": 0, "text": ["Volume Rendering - Metaballs as Volume"], "type": "title", "level": 0}, {"indent": 0, "type": "para", "text": ["Metaball geometry can be natively rendered as a volume in mantra. Metaball rendering can be enabled by checking the ", {"text": ["Metaballs as Volume"], "type": "strong"}, " parameter on the Geometry tab of a geometry object. Any point attributes on the metaballs will be interpolated to the shading position in the same manner that point attributes are interpolated for metaball surfaces."]}, {"indent": 0, "type": "para", "text": ["Here is an example using randomized point color attributes:"]}, {"indent": 0, "type": "para", "text": [{"_hs_sc": true, "text": "", "value": "/examples/nodes/out/ifd/volume_meta.jpg", "fullpath": "/examples/nodes/out/ifd/volume_meta.jpg", "scheme": "Image", "type": "link"}]}, {"indent": 0, "type": "para", "text": ["Controlling Shadow Quality/Performance"]}, {"indent": 0, "type": "para", "text": ["Shadow map generation uses the ", {"text": ["Pixel Samples"], "type": "strong"}, " and ", {"text": ["Shadow Step Size"], "type": "strong"}, " parameters (in the Mantra Render Operator) to control quality and performance in exactly the same way they are used for surfaces. Since volumes often cast soft, diffuse shadows, it is often possible to use low-resolution deep shadow maps when rendering volumes, leading to much faster render times. Shadow map ", {"text": ["Resolution"], "type": "strong"}, " can be changed on the Shadow tab of a Houdini light."]}], "text": "Volume Rendering - Metaballs as Volume", "type": "load_example", "attrs": {"path": "/examples/nodes/out/ifd/Volume_Meta", "examplefile": "/examples/nodes/out/ifd/meta_volume_smoke.otl", "examplefor": "/nodes/out/ifd"}}, {"body": [{"indent": 0, "text": ["Volume Rendering - File Referenced Smoke"], "type": "title", "level": 0}, {"indent": 0, "type": "para", "text": ["Volume rendering is a rendering approach that allows high-quality, integrated rendering of volumetric effects like smoke, clouds, spray, and fire."]}, {"indent": 0, "type": "para", "text": ["Volume rendering is suitable for rendering many types of volumetric effects. Scenes that are particularly suited to rendering with mantra volumes include:"]}, {"body": [{"indent": 0, "blevel": 2, "type": "bullet", "text": ["Detailed \"hero\" clouds, smoke, or fire"]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": ["Fields of instanced clouds, smoke, or fire"]}], "container": true, "type": "bullet_group"}, {"indent": 0, "type": "para", "text": ["Scenes where volume rendering may not be quite so applicable include:"]}, {"body": [{"indent": 0, "blevel": 2, "type": "bullet", "text": ["Scenes with a single uniform fog"]}], "container": true, "type": "bullet_group"}, {"indent": 0, "type": "para", "text": ["In this particular example, a bgeo file (1 frame only) was exported from a fluid simulation of smoke and is now referenced using the File SOP. A material using VEX Volume Cloud is assigned to this volumetric data at the top level of the Volume Object. To see this scene in shaded mode, ensure that HOUDINI_OGL_ENABLE_SHADERS is set to 1 in the environment variables. "]}, {"body": [{"indent": 0, "type": "para", "text": ["Volume rendering uses ray marching to step through volumes. Ray marching generates shading points in the volume by uniformly stepping along rays for each pixel in the image. There are two ways to change the quality and speed of the volume ray marching:"]}, {"body": [{"indent": 0, "blevel": 2, "type": "ord", "text": ["The samples parameter on the Sampling tab of the mantra ROP. More pixel samples will produce more ray marches within that pixel leading to higher quality. Using more pixel samples will also improve antialiasing and motion blur quality for the volume."]}, {"indent": 0, "blevel": 2, "type": "ord", "text": ["The volumequality parameter on the Sampling tab of the mantra ROP. A larger volume quality will produce more samples in the volume interior, improving quality and decreasing performance. A separate shadow quality can be used for shadows."]}], "container": true, "type": "ord_group"}, {"indent": 0, "type": "para", "text": ["Which parameter you should change will depend on your quality requirements for pixel antialiasing. In general, it is better to decrease the volume step size rather than increase the pixel samples because a smaller volume step size will lead to more accurate renders."]}, {"indent": 0, "type": "para", "text": ["This render uses 2\u00d72 samples and volume quality of 1. Notice the detail in the shadows."]}, {"indent": 0, "type": "para", "text": [{"_hs_sc": true, "text": "", "value": "/examples/nodes/out/ifd/volume_smoke1.jpg", "fullpath": "/examples/nodes/out/ifd/volume_smoke1.jpg", "scheme": "Image", "type": "link"}]}, {"indent": 0, "type": "para", "text": ["This render uses the same scene with 4\u00d74 samples and a volume quality of 0.25. The fine detail in the shadow has been lost and the volume is somewhat more transparent. The quality level is approximately the same."]}, {"indent": 0, "type": "para", "text": [{"_hs_sc": true, "text": "", "value": "/examples/nodes/out/ifd/volume_smoke2.jpg", "fullpath": "/examples/nodes/out/ifd/volume_smoke2.jpg", "scheme": "Image", "type": "link"}]}], "indent": 0, "level": 2, "text": ["Controlling Quality/Performance"], "container": true, "type": "h", "id": null}], "text": "Volume Rendering - File Referenced Smoke", "type": "load_example", "attrs": {"path": "/examples/nodes/out/ifd/Volume_Smoke", "examplefile": "/examples/nodes/out/ifd/volume_smoke.otl", "examplefor": "/nodes/out/ifd"}}, {"body": [{"indent": 0, "text": ["Volume Rendering - From Primitives"], "type": "title", "level": 0}, {"indent": 0, "type": "para", "text": ["Volume rendering is a rendering approach that allows high-quality, integrated rendering of volumetric effects like smoke, clouds, spray, and fire."]}, {"indent": 0, "type": "para", "text": ["Volume rendering is suitable for rendering many types of volumetric effects such as:"]}, {"body": [{"indent": 0, "blevel": 2, "type": "bullet", "text": ["Detailed \"hero\" clouds, smoke, or fire"]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": ["Fields of instanced clouds, smoke, or fire"]}], "container": true, "type": "bullet_group"}, {"indent": 0, "type": "para", "text": ["It is easy to create volumes from primitives without invoking the fluid solver."]}, {"indent": 0, "type": "para", "text": ["In this particular example, a primitive torus is used to render some smoke volume. Using an IsoOffset SOP produces a volume that fills the interior of the torus. Then, a material using a Volume Cloud is assigned to the volumetric data of the torus shape. Setting the Smoke Cloud Density to 5 and the Smoke Shadow Density to 10 helps create a more smoke-like look and feel."]}, {"indent": 0, "type": "para", "text": ["Here is the torus rendered with tweaks to the volume step sizes (in the Mantra Render Operator), shadow map quality (under Depth Map Options of the spotlight), and volume primitive divisions (on the IsoOffset SOP). The smoke Diffuse color was adjusted too."]}, {"indent": 0, "type": "para", "text": [{"_hs_sc": true, "text": "", "value": "/examples/nodes/out/ifd/volume_torus.jpg", "fullpath": "/examples/nodes/out/ifd/volume_torus.jpg", "scheme": "Image", "type": "link"}]}], "text": "Volume Rendering - From Primitives", "type": "load_example", "attrs": {"path": "/examples/nodes/out/ifd/Volume_Torus", "examplefile": "/examples/nodes/out/ifd/torus_volume_smoke.otl", "examplefor": "/nodes/out/ifd"}}], "container": true, "type": "grouped_examples", "key": "/nodes/out/ifd"}, {"body": [{"body": [{"indent": 0, "type": "title", "text": ["netbarrierpost"]}, {"indent": 0, "type": "para", "text": ["In this example, we demonstrate how a netbarrier ROP \nnode can be used to ensure that multiple machines stay in \nsync with each other. "]}], "text": "netbarrierpost", "type": "load_example", "attrs": {"path": "/examples/nodes/out/netbarrier/netbarrierpost", "examplefile": "/examples/nodes/out/netbarrier/netbarrierpost.otl", "examplefor": "/nodes/out/netbarrier"}}], "container": true, "type": "grouped_examples", "key": "/nodes/out/netbarrier"}, {"body": [{"body": [{"indent": 0, "type": "title", "text": ["RampReference"]}, {"indent": 0, "type": "para", "text": ["This example demonstrates the use of ramps and \nreferenced ramps which are animated over time."]}], "text": "RampReference", "type": "load_example", "attrs": {"path": "/examples/nodes/out/ramp/RampReference", "examplefile": "/examples/nodes/out/ramp/RampReference.otl", "examplefor": "/nodes/out/ramp"}}], "container": true, "type": "grouped_examples", "key": "/nodes/out/ramp"}, {"body": [{"body": [{"indent": 0, "type": "title", "text": ["ShutterShape"]}, {"indent": 0, "type": "para", "text": ["This example demonstrates how to use the shutter shape\nparameter to control the opening of the shutter along time\nthrough a grayscale ramp."]}], "text": "ShutterShape", "type": "load_example", "attrs": {"path": "/examples/nodes/out/shutter/ShutterShape", "examplefile": "/examples/nodes/out/shutter/ShutterShape.otl", "examplefor": "/nodes/out/shutter"}}], "container": true, "type": "grouped_examples", "key": "/nodes/out/shutter"}, {"body": [{"body": [{"indent": 0, "type": "title", "text": ["rop_example_wedge"]}, {"indent": 0, "type": "para", "text": ["This example shows how to setup the Wedge ROP to automatically create a bunch\nof variants of a network."]}], "text": "rop_example_wedge", "type": "load_example", "attrs": {"path": "/examples/nodes/out/wedge/rop_example_wedge", "examplefile": "/examples/nodes/out/wedge/rop_example_wedge.otl", "examplefor": "/nodes/out/wedge"}}], "container": true, "type": "grouped_examples", "key": "/nodes/out/wedge"}], "indent": 0, "role": "item", "type": "list_examples", "attrs": {"groupedby": "examplefor", "query": "path:/examples/nodes/out/*"}}], "container": true, "role": "item_group", "type": "list_examples_group"}], "indent": 0, "level": 1, "text": ["Examples"], "role": "section", "container": true, "type": "subtopics_section", "id": "subtopics"}], "included": ["/examples/nodes/out/fetch/FetchROP.txt", "/examples/nodes/out/ifd/Volume_Meta.txt", "/examples/nodes/out/netbarrier/netbarrierpost.txt", "/examples/nodes/out/ifd/Volume_Torus.txt", "/examples/nodes/out/ifd/MotionVector.txt", "/examples/nodes/out/ifd/Volume_Smoke.txt", "/examples/nodes/out/ramp/RampReference.txt", "/examples/nodes/out/ifd/AmbientOcclusion.txt", "/examples/nodes/out/shutter/ShutterShape.txt", "/examples/nodes/out/wedge/rop_example_wedge.txt"], "type": "root", "attrs": {}, "title": ["Render node examples"]}