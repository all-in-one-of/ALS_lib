{"body": [{"indent": 0, "text": [{"text": "hou.", "type": "supertitle"}, "GeometrySelection"], "type": "title", "level": 0}, {"indent": 0, "type": "summary", "text": ["Represents a component selection performed by the user in a viewport."]}, {"indent": 0, "type": "para", "text": ["Calling ", {"_hs_sc": true, "fragment": "#selectGeometry", "text": "", "value": "/hom/hou/SceneViewer#selectGeometry", "fallback_text": "hou.SceneViewer.selectGeometry", "fullpath": "/hom/hou/SceneViewer#selectGeometry", "scheme": "Hom", "type": "link"}, " waits for the user to perform a\nselection in the viewport, and returns an object of this type representing\nthe elected components. The returned selection can be manipulated by\nconverting it to a specific component type, grown, or shrunk. Then the\nselection can be converted to a string that can be used in a\n", {"_hs_sc": true, "text": ["SOP node"], "value": "/hom/hou/SopNode", "fullpath": "/hom/hou/SopNode", "scheme": "Hom", "type": "link"}, " group ", {"_hs_sc": true, "text": ["parameter"], "value": "/hom/hou/Parm", "fullpath": "/hom/hou/Parm", "scheme": "Hom", "type": "link"}, "."]}, {"indent": 0, "type": "para", "text": ["If the selection contains components from more than one SOP, you can use the\n", {"_hs_sc": true, "fragment": "#mergedNode", "text": "", "value": "/hom/hou/GeometrySelection#mergedNode", "fallback_text": "hou.GeometrySelection.mergedNode", "fullpath": "/hom/hou/GeometrySelection#mergedNode", "scheme": "Hom", "type": "link"}, " function to create a Merge SOP and/or\nObject Merge SOPs that brings all the referenced geometry into a single node."]}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "text": ["Returns the ", {"_hs_sc": true, "text": "", "value": "/hom/hou/connectivityType", "fallback_text": "hou.connectivityType", "fullpath": "/hom/hou/connectivityType", "scheme": "Hom", "type": "link"}, " that has been set on this geometry\n    selection. Unlesss you call ", {"_hs_sc": true, "fragment": "#setConnectivity", "text": "", "value": "/hom/hou/GeometrySelection#setConnectivity", "fallback_text": "hou.GeometrySelection.setConnectivity", "fullpath": "/hom/hou/GeometrySelection#setConnectivity", "scheme": "Hom", "type": "link"}, ",\n    this function will return the no connectivity value."]}], "indent": 0, "text": [{"text": ["connectivity(self) -> hou.connectivityType enum value"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_GeometrySelection::connectivity"}, "type": "methods_item", "id": "connectivity"}, {"body": [{"indent": 4, "type": "para", "text": ["Returns the type of component that was selected."]}], "indent": 0, "text": [{"text": ["geometryType(self) -> hou.geometryType enum value"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_GeometrySelection::geometryType"}, "type": "methods_item", "id": "geometryType"}, {"body": [{"indent": 4, "type": "para", "text": ["Creates a Merge SOP that combines all the SOPs referenced by the\n    selection. Most selections will only reference a single SOP in which\n    case no Merge SOP is required, and the selected SOP will be returned."]}], "indent": 0, "text": [{"text": ["mergedNode(self, parent, creator_name, force_keep_original_objects=False, display_original_objects=False) -> Node"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_GeometrySelection::mergedNode"}, "type": "methods_item", "id": "mergedNode"}, {"body": [{"indent": 4, "type": "para", "text": ["Returns a single string that can be used in group parameters of the\n    merged node returned by ", {"_hs_sc": true, "fragment": "#mergedNode", "text": "", "value": "/hom/hou/GeometrySelection#mergedNode", "fallback_text": "hou.GeometrySelection.mergedNode", "fullpath": "/hom/hou/GeometrySelection#mergedNode", "scheme": "Hom", "type": "link"}, ". If all\n    components are selected from a single node this is equivalent to the\n    first string in the tuple returned by\n    ", {"_hs_sc": true, "fragment": "#selectionStrings", "text": "", "value": "/hom/hou/GeometrySelection#selectionStrings", "fallback_text": "hou.GeometrySelection.selectionStrings", "fullpath": "/hom/hou/GeometrySelection#selectionStrings", "scheme": "Hom", "type": "link"}, "."]}], "indent": 0, "text": [{"text": ["mergedSelectionString(self, empty_string_selects_all=True, force_numeric=False) -> string"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_GeometrySelection::mergedSelectionString"}, "type": "methods_item", "id": "mergedSelectionString"}, {"body": [{"indent": 4, "type": "para", "text": ["Removes components that are on the boundary of the selection."]}], "indent": 0, "text": [{"text": ["shrinkSelection(checkuv = true)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_GeometrySelection::shrinkSelection"}, "type": "methods_item", "id": "shrinkSelection"}, {"body": [{"indent": 4, "type": "para", "text": ["Expands the selection by adding all components that are connected to\n    components currently in the selection."]}], "indent": 0, "text": [{"text": ["growSelection()"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_GeometrySelection::growSelection"}, "type": "methods_item", "id": "growSelection"}, {"body": [{"indent": 4, "type": "para", "text": ["Returns true if a Merge SOP needs to be created in order to access all\n    components in the selection."]}], "indent": 0, "text": [{"text": ["needsMergedNode(self, parent) -> bool"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_GeometrySelection::needsMergedNode"}, "type": "methods_item", "id": "needsMergedNode"}, {"body": [{"indent": 4, "type": "para", "text": ["Returns a tuple of all nodes referenced by the selection."]}], "indent": 0, "text": [{"text": ["nodes(self) -> tuple of Nodes"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_GeometrySelection::nodes"}, "type": "methods_item", "id": "nodes"}, {"body": [{"indent": 4, "type": "para", "text": ["Returns true if this is an ordered selection. This means that the order\n    in which the user selected the components is preserved. To have an\n    ordered selection, the ", {"text": ["ordered"], "type": "code"}, " parameter needs to have been set to\n    True when calling ", {"_hs_sc": true, "fragment": "#geometrySelection", "text": "", "value": "/hom/hou/SceneViewer#geometrySelection", "fallback_text": "hou.SceneViewer.geometrySelection", "fullpath": "/hom/hou/SceneViewer#geometrySelection", "scheme": "Hom", "type": "link"}, "."]}], "indent": 0, "text": [{"text": ["ordered(self) -> bool"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_GeometrySelection::ordered"}, "type": "methods_item", "id": "ordered"}, {"body": [{"indent": 4, "type": "para", "text": ["Returns a tuple containing all ", {"_hs_sc": true, "text": ["primitive types"], "value": "/hom/hou/primitiveType", "fullpath": "/hom/hou/primitiveType", "scheme": "Hom", "type": "link"}, "\n    that are contained in the selection."]}], "indent": 0, "text": [{"text": ["primitiveTypes(self) -> tuple of hou.primitiveType enum values"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_GeometrySelection::primitiveTypes"}, "type": "methods_item", "id": "primitiveTypes"}, {"body": [{"indent": 4, "type": "para", "text": ["Returns a tuple of component selection objects. These correspond to the\n    nodes returned by the nodes function."]}], "indent": 0, "text": [{"text": ["selections(self) -> tuple of [Hom:hou.Selection]"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_GeometrySelection::selections"}, "type": "methods_item", "id": "selections"}, {"body": [{"indent": 4, "type": "para", "text": ["Returns a tuple of strings that can be used to refer to the selected\n    components in each SOP node referenced by the selection."]}], "indent": 0, "text": [{"text": ["selectionStrings(self, empty_string_selects_all=True, bool force_numeric=False) -> tuple of strings"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_GeometrySelection::selectionStrings"}, "type": "methods_item", "id": "selectionStrings"}, {"body": [{"indent": 4, "type": "para", "text": ["Sets the type of connectivity to enforce when modifying the selection.\n    The current selection is also expanded so that all connected components\n    (using the supplied style of connectivity) become part of the selection."]}], "indent": 0, "text": [{"text": ["setConnectivity(self, connectivity)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_GeometrySelection::setConnectivity"}, "type": "methods_item", "id": "setConnectivity"}, {"body": [{"indent": 4, "type": "para", "text": ["Changes the type of component contained in the selection, converting the\n    existing selection to the new comonent type."]}], "indent": 0, "text": [{"text": ["setGeometryType(self, type)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_GeometrySelection::setGeometryType"}, "type": "methods_item", "id": "setGeometryType"}, {"body": [{"indent": 4, "type": "para", "text": ["Sets the tuple of primitive types allowed in the selection. Any primtives\n    that are not of an allowed type are removed from the selection. Only has\n    an effect if this is a primitive selection."]}], "indent": 0, "text": [{"text": ["setPrimitiveTypes(self, primitive_types)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_GeometrySelection::setPrimitiveTypes"}, "type": "methods_item", "id": "setPrimitiveTypes"}], "container": true, "role": "item_group", "type": "methods_item_group"}], "indent": 0, "level": 1, "text": "Methods", "role": "section", "container": true, "type": "methods_section", "id": "methods"}], "summary": ["Represents a component selection performed by the user in a viewport."], "type": "root", "attrs": {"cppname": "HOM_GeometrySelection", "type": "homclass", "group": "view"}, "title": [{"text": "hou.", "type": "supertitle"}, "GeometrySelection"]}