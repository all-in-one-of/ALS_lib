{"body": [{"indent": 0, "text": [{"text": "hou.", "type": "supertitle"}, "IndirectInput"], "type": "title", "level": 0}, {"indent": 0, "type": "summary", "text": ["An abstract base class for a network item that can be used as an input to\nnodes in the same network, but which is not a node itself."]}, {"indent": 0, "type": "para", "text": ["There are two specific forms of an indirect input. The\n", {"_hs_sc": true, "text": "", "value": "/hom/hou/SubnetIndirectInput", "fallback_text": "hou.SubnetIndirectInput", "fullpath": "/hom/hou/SubnetIndirectInput", "scheme": "Hom", "type": "link"}, " provides a way to connect nodes outside a\nsub-network to nodes inside the sub-network. The ", {"_hs_sc": true, "text": "", "value": "/hom/hou/NetworkDot", "fallback_text": "hou.NetworkDot", "fullpath": "/hom/hou/NetworkDot", "scheme": "Hom", "type": "link"}, "\nallows connections to be routed through a network along any path."]}, {"body": [{"body": [{"body": [{"body": [{"indent": 4, "type": "para", "text": ["Return the nodes that have one of their inputs connected to the output of\n    this object."]}], "indent": 0, "text": [{"text": ["outputs(self)"], "type": "code"}, "  \u2192 ", {"text": ["tuple"], "type": "code"}, " of ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Node", "fallback_text": "hou.Node", "fullpath": "/hom/hou/Node", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"cppname": "HOM_SubnetIndirectInput::outputs"}, "type": "methods_item", "id": "outputs"}, {"body": [{"indent": 4, "type": "para", "text": ["Return a tuple of objects representing each connection to a node from the\n    output of this object. The objects returned by this method allow you to\n    discover not just which nodes are connected to this object, but which\n    inputs it feeds into."]}], "indent": 0, "text": [{"text": ["outputConnections(self)"], "type": "code"}, "  \u2192 ", {"text": ["tuple"], "type": "code"}, " of ", {"_hs_sc": true, "text": "", "value": "/hom/hou/NodeConnection", "fallback_text": "hou.NodeConnection", "fullpath": "/hom/hou/NodeConnection", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"cppname": "HOM_SubnetIndirectInput::outputs"}, "type": "methods_item", "id": "outputConnections"}, {"body": [{"indent": 4, "type": "para", "text": ["Return the node on the input side of this indirect input. If this\n    input comes through another indirect input, this function will recurse\n    through that indirect input until it finds a node. If no node is\n    connected, even indirectly, ", {"text": ["None"], "type": "code"}, " will be returned. Note that the\n    returned node may not be inside the same parent network as this object\n    if the method traverses up through a ", {"_hs_sc": true, "text": "", "value": "/hom/hou/SubnetIndirectInput", "fallback_text": "hou.SubnetIndirectInput", "fullpath": "/hom/hou/SubnetIndirectInput", "scheme": "Hom", "type": "link"}, "."]}], "indent": 0, "text": [{"text": ["input(self)"], "type": "code"}, "  \u2192 ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Node", "fallback_text": "hou.Node", "fullpath": "/hom/hou/Node", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"cppname": "HOM_IndirectInput::inputNode"}, "type": "methods_item", "id": "input"}, {"body": [{"indent": 4, "type": "para", "text": ["Returns the index of the output connection on the node that the input\n    side of this object connects to. As with the ", {"text": ["input"], "type": "code"}, " function, indirect\n    inputs are traversed until a node is found. If no node is connected, even\n    indirectly, ", {"text": ["0"], "type": "code"}, " will be returned."]}], "indent": 0, "text": [{"text": ["inputOutputIndex(self)"], "type": "code"}, "  \u2192 ", {"text": ["int"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_IndirectInput::outputIndex"}, "type": "methods_item", "id": "inputOutputIndex"}, {"body": [{"indent": 4, "type": "para", "text": ["Returns the item connected directly to the input side of this indirect\n    input. This may be a node, indirect input, or ", {"text": ["None"], "type": "code"}, " if nothing is\n    connected. Note that the returned item may not be inside the same parent\n    network as this object if it is a ", {"_hs_sc": true, "text": "", "value": "/hom/hou/SubnetIndirectInput", "fallback_text": "hou.SubnetIndirectInput", "fullpath": "/hom/hou/SubnetIndirectInput", "scheme": "Hom", "type": "link"}, "."]}], "indent": 0, "text": [{"text": ["inputItem(self)"], "type": "code"}, "  \u2192 ", {"_hs_sc": true, "text": "", "value": "/hom/hou/NetworkMovableItem", "fallback_text": "hou.NetworkMovableItem", "fullpath": "/hom/hou/NetworkMovableItem", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"cppname": "HOM_IndirectInput::inputItem"}, "type": "methods_item", "id": "inputItem"}, {"body": [{"indent": 4, "type": "para", "text": ["Returns the index of the output connection on the network item connected\n    directly to the input side of this object. Returns ", {"text": ["0"], "type": "code"}, " if nothing is\n    connected. This value will only be non-zero if a ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Node", "fallback_text": "hou.Node", "fullpath": "/hom/hou/Node", "scheme": "Hom", "type": "link"}, " is\n    connected to this object since all other network items only has a single\n    output connector."]}], "indent": 0, "text": [{"text": ["inputItemOutputIndex(self)"], "type": "code"}, "  \u2192 ", {"text": ["int"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_IndirectInput::inputItemOutputIndex"}, "type": "methods_item", "id": "inputItemOutputIndex"}], "container": true, "role": "item_group", "type": "methods_item_group"}], "indent": 0, "level": 2, "text": ["Inputs and outputs"], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "text": ["Sets the color of this object to be the default for indirect inputs. By\n    explicitly setting to the default color, any future changes to the default\n    indirect input color will cause this object to use the new color. This\n    method clears the ", {"text": ["symbolicColorName"], "type": "code"}, " setting and the\n    ", {"text": ["useColorFromOutput"], "type": "code"}, " setting."]}], "indent": 0, "text": [{"text": ["setColorDefault(self)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_SubnetIndirectInput::setColorDefault"}, "type": "methods_item", "id": "setColorDefault"}, {"body": [{"indent": 4, "type": "para", "text": ["Sets the color of this object to use a symbolic color name defined in the\n    current Houdini color scheme (see ", {"_hs_sc": true, "text": "", "value": "/hom/hou/ui/colorByName", "fallback_text": "hou.ui.colorByName", "fullpath": "/hom/hou/ui/colorByName", "scheme": "Hom", "type": "link"}, "). The symbolic\n    color name will be saved with the hip file so that changes to the color\n    scheme will result in a new color being used for this object. This\n    method clears the ", {"text": ["useColorFromDefault"], "type": "code"}, " setting, and causes the\n    ", {"text": ["color"], "type": "code"}, " value to be ignored."]}], "indent": 0, "text": [{"text": ["setSymbolicColorName(self, name)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_SubnetIndirectInput::setSymbolicColorName"}, "type": "methods_item", "id": "setSymbolicColorName"}, {"body": [{"indent": 4, "type": "para", "text": ["Set this indirect input to display itself with the same color as the\n    first input connector connected as an output to this object. If set to\n    ", {"text": ["False"], "type": "code"}, ", this object is displayed with its color returned by the\n    ", {"_hs_sc": true, "fragment": "#setColor", "text": "", "value": "/hom/hou/NetworkMovableItem#setColor", "fallback_text": "hou.NetworkMovableItem.setColor", "fullpath": "/hom/hou/NetworkMovableItem#setColor", "scheme": "Hom", "type": "link"}, " method. This method clears the\n    ", {"text": ["symbolicColorName"], "type": "code"}, " setting, and causes the ", {"text": ["color"], "type": "code"}, " value to be ignored."]}], "indent": 0, "text": [{"text": ["setUseColorFromOutput(self, use_output_color)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_SubnetIndirectInput::setUseColorFromOutput"}, "type": "methods_item", "id": "setUseColorFromOutput"}, {"body": [{"indent": 4, "type": "para", "text": ["Return the symbolic color name used to display this object, set with the\n    ", {"text": ["setSymbolicColorName"], "type": "code"}, " method. Returns an empty string if the color of\n    this object was set using the ", {"text": ["setUseColorFromOutput"], "type": "code"}, " or\n    ", {"_hs_sc": true, "fragment": "#setColor", "text": "", "value": "/hom/hou/NetworkMovableItem#setColor", "fallback_text": "hou.NetworkMovableItem.setColor", "fullpath": "/hom/hou/NetworkMovableItem#setColor", "scheme": "Hom", "type": "link"}, " methods. The symbolic color name\n    can be converted to a ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Color", "fallback_text": "hou.Color", "fullpath": "/hom/hou/Color", "scheme": "Hom", "type": "link"}, " using ", {"_hs_sc": true, "text": "", "value": "/hom/hou/ui/colorFromName", "fallback_text": "hou.ui.colorFromName", "fullpath": "/hom/hou/ui/colorFromName", "scheme": "Hom", "type": "link"}, "."]}], "indent": 0, "text": [{"text": ["symbolicColorName(self)"], "type": "code"}, "  \u2192 ", {"text": ["str"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_SubnetIndirectInput::symbolicColorName"}, "type": "methods_item", "id": "symbolicColorName"}, {"body": [{"indent": 4, "type": "para", "text": ["Return ", {"text": ["True"], "type": "code"}, " if this object will be displayed based on the color of the\n    first input to which it is connected. Return ", {"text": ["False"], "type": "code"}, " if will be displayed\n    using the color return by the ", {"_hs_sc": true, "exists": true, "text": "", "value": "/hom/:hou/NetworkMovableItem#color", "fallback_text": ":hou.NetworkMovableItem.color", "scheme": "Hom", "type": "link"}, " method."]}], "indent": 0, "text": [{"text": ["useColorFromOutput(self)"], "type": "code"}, "  \u2192 ", {"text": ["bool"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_SubnetIndirectInput::useColorFromOutput"}, "type": "methods_item", "id": "useColorFromOutput"}], "container": true, "role": "item_group", "type": "methods_item_group"}], "indent": 0, "level": 2, "text": ["Metadata"], "container": true, "type": "h", "id": null}], "indent": 0, "level": 1, "text": "Methods", "role": "section", "container": true, "type": "methods_section", "id": "methods"}], "summary": ["An abstract base class for a network item that can be used as an input to\nnodes in the same network, but which is not a node itself."], "type": "root", "attrs": {"cppname": "HOM_IndirectInput", "type": "homclass", "superclass": "hou.NetworkMovableItem", "group": "nodes"}, "title": [{"text": "hou.", "type": "supertitle"}, "IndirectInput"]}