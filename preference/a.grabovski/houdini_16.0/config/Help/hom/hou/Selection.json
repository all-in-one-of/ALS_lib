{"body": [{"indent": 0, "text": [{"text": "hou.", "type": "supertitle"}, "Selection"], "type": "title", "level": 0}, {"indent": 0, "type": "summary", "text": ["A class that represents a geometry component selection."]}, {"indent": 0, "type": "para", "text": ["Component selections are not tied to any specific ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Geometry", "fallback_text": "hou.Geometry", "fullpath": "/hom/hou/Geometry", "scheme": "Hom", "type": "link"}, ".\nTherefore most method on this class must be passed a Geometry object to look\nup information about individual components. This explicit separation allows\nthe selection class to be used as a utility class for processing geometry\ntopology (growing the set of components, shrinking it, finding the boundary,\netc.). This separation also avoids any expectations that changing the\ncontents of a selection object might be expected to update the selection\nvisible on some goemetry in the viewport. Setting the visible viewport\nselection must always be an explicit operation on a ", {"_hs_sc": true, "text": "", "value": "/hom/hou/SopNode", "fallback_text": "hou.SopNode", "fullpath": "/hom/hou/SopNode", "scheme": "Hom", "type": "link"}, " in order\nfor Houdini to be able to track changes properly."]}, {"indent": 0, "type": "para", "text": ["If a selection object is returned from a call to ", {"_hs_sc": true, "fragment": "#selection", "text": "", "value": "/hom/hou/Geometry#selection", "fallback_text": "hou.Geometry.selection", "fullpath": "/hom/hou/Geometry#selection", "scheme": "Hom", "type": "link"}, ",\n", {"_hs_sc": true, "fragment": "#selections", "text": "", "value": "/hom/hou/GeometrySelection#selections", "fallback_text": "hou.GeometrySelection.selections", "fullpath": "/hom/hou/GeometrySelection#selections", "scheme": "Hom", "type": "link"}, ", or a ", {"_hs_sc": true, "fragment": "#selection", "text": "", "value": "/hom/hou/SopNode#selection", "fallback_text": "hou.SopNode.selection", "fullpath": "/hom/hou/SopNode#selection", "scheme": "Hom", "type": "link"}, ", the\nselection cannot be modified. A copy of the selection must be made first with\nthe ", {"text": ["freeze()"], "type": "code"}, " method. This new selection can be modified, and passed back into\na ", {"_hs_sc": true, "fragment": "#setSelection", "text": "", "value": "/hom/hou/SopNode#setSelection", "fallback_text": "hou.SopNode.setSelection", "fullpath": "/hom/hou/SopNode#setSelection", "scheme": "Hom", "type": "link"}, " if desired. Because each SOP has a selection\nfor each component type, when you set a new selection it will replace the\nexisting selection of that component type. Note that this may not result in\nthe visible selection in the viewport changing if the viewport is not\ncurrently configured to select that component type. The viewport selection\ntype can be controlled with the ", {"_hs_sc": true, "text": "", "value": "/hom/hou/SceneViewer", "fallback_text": "hou.SceneViewer", "fullpath": "/hom/hou/SceneViewer", "scheme": "Hom", "type": "link"}, " class. A selection\ncreated by calling any of the ", {"text": ["hou.Selection()"], "type": "code"}, " initializer methods are\ncreated in a modifiable state, so a call to ", {"text": ["freeze()"], "type": "code"}, " is not required."]}, {"indent": 0, "type": "para", "text": ["A selection returned from a ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Geometry", "fallback_text": "hou.Geometry", "fullpath": "/hom/hou/Geometry", "scheme": "Hom", "type": "link"}, " or a ", {"_hs_sc": true, "text": "", "value": "/hom/hou/SopNode", "fallback_text": "hou.SopNode", "fullpath": "/hom/hou/SopNode", "scheme": "Hom", "type": "link"}, " is a\nreference to the source selection, and so will change if the selection on the\nsource geometry is changed. This seems like a departure from the separation of\nselection objects from any particular geometry, however it matches the\nbehavior of the ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Geometry", "fallback_text": "hou.Geometry", "fullpath": "/hom/hou/Geometry", "scheme": "Hom", "type": "link"}, " class returned from a SOP node. This is\nbecause the underlying selection data is shared with the SOP rather than\ncopied. The ", {"text": ["freeze()"], "type": "code"}, " method can be used to force a copy of the selection\ndata that is disconnected from any particular SOP (as well as allowing the\nselection contents to be modified)."]}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "text": ["Creates a new empty Selection object with one of the ", {"_hs_sc": true, "text": "", "value": "/hom/hou/geometryType", "fallback_text": "hou.geometryType", "fullpath": "/hom/hou/geometryType", "scheme": "Hom", "type": "link"}, "\n    values passed as the ", {"text": ["selection_type"], "type": "code"}, " to control the type of component\n    that can be part of this selection."]}], "indent": 0, "text": [{"text": ["__init__(self, selection_type)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Selection::HOM_Selection"}, "type": "methods_item", "id": "__init__"}, {"body": [{"indent": 4, "type": "para", "text": ["Creates a new Selection object with initial contents defined by a group\n    string evaluated on a particular Geometry object."]}, {"body": [{"body": [{"indent": 8, "type": "para", "text": ["A ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Geometry", "fallback_text": "hou.Geometry", "fullpath": "/hom/hou/Geometry", "scheme": "Hom", "type": "link"}, " object that is used when evaluating the selection\n        string."]}], "indent": 4, "type": "dt", "text": ["geo"]}, {"body": [{"indent": 8, "type": "para", "text": ["A ", {"_hs_sc": true, "text": "", "value": "/hom/hou/geometryType", "fallback_text": "hou.geometryType", "fullpath": "/hom/hou/geometryType", "scheme": "Hom", "type": "link"}, " value to indicate the type of component that\n        will appear in this Selection."]}], "indent": 4, "type": "dt", "text": ["selection_type"]}, {"body": [{"indent": 8, "type": "para", "text": ["Any string that might appear in a SOP Group parameter that describes\n        which components to include in the selection. This string may include\n        any features supported by SOP group parsing, such as group names,\n        numeric ranges, and attribute value tests."]}], "indent": 4, "type": "dt", "text": ["selection_string"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": [{"text": ["__init__(self, geo, selection_type, selection_string)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Selection::HOM_Selection"}, "type": "methods_item", "id": "__init__"}, {"body": [{"indent": 4, "type": "para", "text": ["Creates a new primitive component selection from the passed in sequence of\n    ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Prim", "fallback_text": "hou.Prim", "fullpath": "/hom/hou/Prim", "scheme": "Hom", "type": "link"}, " objects."]}], "indent": 0, "text": [{"text": ["__init__(self, prims)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Selection::HOM_Selection"}, "type": "methods_item", "id": "__init__"}, {"body": [{"indent": 4, "type": "para", "text": ["Creates a new point component selection from the passed in sequence of\n    ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Point", "fallback_text": "hou.Point", "fullpath": "/hom/hou/Point", "scheme": "Hom", "type": "link"}, " objects."]}], "indent": 0, "text": [{"text": ["__init__(self, points)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Selection::HOM_Selection"}, "type": "methods_item", "id": "__init__"}, {"body": [{"indent": 4, "type": "para", "text": ["Creates a new vertex component selection from the passed in sequence of\n    ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Vertex", "fallback_text": "hou.Vertex", "fullpath": "/hom/hou/Vertex", "scheme": "Hom", "type": "link"}, " objects."]}], "indent": 0, "text": [{"text": ["__init__(self, vertices)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Selection::HOM_Selection"}, "type": "methods_item", "id": "__init__"}, {"body": [{"indent": 4, "type": "para", "text": ["Creates a new edge component selection from the passed in sequence of\n    ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Edge", "fallback_text": "hou.Edge", "fullpath": "/hom/hou/Edge", "scheme": "Hom", "type": "link"}, " objects."]}], "indent": 0, "text": [{"text": ["__init__(self, edges)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Selection::HOM_Selection"}, "type": "methods_item", "id": "__init__"}, {"body": [{"indent": 4, "type": "para", "text": ["Returns a copy of the Selection object. This copy can be modified with any\n    of the functions that alter the selection."]}], "indent": 0, "text": [{"text": ["freeze(self)"], "type": "code"}, "  \u2192 ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Selection", "fallback_text": "hou.Selection", "fullpath": "/hom/hou/Selection", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"cppname": "HOM_Selection::freeze"}, "type": "methods_item", "id": "freeze"}, {"body": [{"indent": 4, "type": "para", "text": ["Using the supplied ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Geometry", "fallback_text": "hou.Geometry", "fullpath": "/hom/hou/Geometry", "scheme": "Hom", "type": "link"}, " object for reference, inverts the\n    current selection. The selection will contain only those components that\n    were not in the selection before this method call."]}], "indent": 0, "text": [{"text": ["invert(self, geo)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Selection::invert"}, "type": "methods_item", "id": "invert"}, {"body": [{"indent": 4, "type": "para", "text": ["Using the supplied ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Geometry", "fallback_text": "hou.Geometry", "fullpath": "/hom/hou/Geometry", "scheme": "Hom", "type": "link"}, " object for reference, converts the\n    current selection to the new ", {"_hs_sc": true, "text": "", "value": "/hom/hou/geometryType", "fallback_text": "hou.geometryType", "fullpath": "/hom/hou/geometryType", "scheme": "Hom", "type": "link"}, "."]}], "indent": 0, "text": [{"text": ["convert(self, geo, selection_type)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Selection::convert"}, "type": "methods_item", "id": "convert"}, {"body": [{"indent": 4, "type": "para", "text": ["Using the supplied ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Geometry", "fallback_text": "hou.Geometry", "fullpath": "/hom/hou/Geometry", "scheme": "Hom", "type": "link"}, " object for reference, changes the\n    selection to contain those components on the boundary of the current\n    selection. The ", {"text": ["uv_connectivity"], "type": "code"}, " parameter controls whether to use\n    topology or uv attribute values to determine whether components are\n    connected."]}], "indent": 0, "text": [{"text": ["boundary(self, geo, uv_connectivity = False)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Selection::boundary"}, "type": "methods_item", "id": "boundary"}, {"body": [{"indent": 4, "type": "para", "text": ["Using the supplied ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Geometry", "fallback_text": "hou.Geometry", "fullpath": "/hom/hou/Geometry", "scheme": "Hom", "type": "link"}, " object for reference, adds to the\n    selection any components connected to the current selection. The\n    ", {"text": ["uv_connectivity"], "type": "code"}, " parameter controls whether to use topology or uv\n    attribute values to determine whether components are connected."]}], "indent": 0, "text": [{"text": ["grow(self, geo, uv_connectivity = False)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Selection::grow"}, "type": "methods_item", "id": "grow"}, {"body": [{"indent": 4, "type": "para", "text": ["Using the supplied ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Geometry", "fallback_text": "hou.Geometry", "fullpath": "/hom/hou/Geometry", "scheme": "Hom", "type": "link"}, " object for reference, removes from\n    the selection any components on the boundary of the current selection. The\n    ", {"text": ["uv_connectivity"], "type": "code"}, " parameter controls whether to use topology or uv\n    attribute values to determine whether components are connected."]}], "indent": 0, "text": [{"text": ["shrink(self, geo, uv_connectivity = False)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Selection::shrink"}, "type": "methods_item", "id": "shrink"}, {"body": [{"indent": 4, "type": "para", "text": ["Using the supplied ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Geometry", "fallback_text": "hou.Geometry", "fullpath": "/hom/hou/Geometry", "scheme": "Hom", "type": "link"}, " object for reference, combines this\n    selection with another."]}, {"body": [{"body": [{"indent": 8, "type": "para", "text": ["A ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Geometry", "fallback_text": "hou.Geometry", "fullpath": "/hom/hou/Geometry", "scheme": "Hom", "type": "link"}, " object that is used when doing any selection\n        conversions."]}], "indent": 4, "type": "dt", "text": ["geo"]}, {"body": [{"indent": 8, "type": "para", "text": ["A ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Selection", "fallback_text": "hou.Selection", "fullpath": "/hom/hou/Selection", "scheme": "Hom", "type": "link"}, " object that will be combined with the current\n        selection. If this selection does not have the same component type as\n        the current selection, an implicit conversion to the current component\n        type is performed before combining the selections."]}], "indent": 4, "type": "dt", "text": ["selection"]}, {"body": [{"indent": 8, "type": "para", "text": ["A ", {"_hs_sc": true, "text": "", "value": "/hom/hou/pickModifier", "fallback_text": "hou.pickModifier", "fullpath": "/hom/hou/pickModifier", "scheme": "Hom", "type": "link"}, " value that controls how the selections will\n        be combined. This lets you perform a union, intersection, or other\n        operation on a pairs of selections."]}], "indent": 4, "type": "dt", "text": ["modifier"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": [{"text": ["combine(self, geo, selection, modifier)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Selection::combine"}, "type": "methods_item", "id": "combine"}, {"body": [{"indent": 4, "type": "para", "text": ["Removes all components from the current selection."]}], "indent": 0, "text": [{"text": ["clear(self)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Selection::clear"}, "type": "methods_item", "id": "clear"}, {"body": [{"indent": 4, "type": "para", "text": ["Returns a ", {"_hs_sc": true, "text": "", "value": "/hom/hou/geometryType", "fallback_text": "hou.geometryType", "fullpath": "/hom/hou/geometryType", "scheme": "Hom", "type": "link"}, " value indicating the type of component\n    referenced by this selection."]}], "indent": 0, "text": [{"text": ["selectionType(self)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Selection::selectionType"}, "type": "methods_item", "id": "selectionType"}, {"body": [{"indent": 4, "type": "para", "text": ["Returns the number of components in the selection."]}], "indent": 0, "text": [{"text": ["numSelected(self)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Selection::numSelected"}, "type": "methods_item", "id": "numSelected"}, {"body": [{"indent": 4, "type": "para", "text": ["Returns a tuple of all primitives in the selection. If the selection does\n    not contain primitives, an implicit conversion to primitives is performed\n    to generate the return value."]}], "indent": 0, "text": [{"text": ["prims(self, goe)"], "type": "code"}, "  \u2192 ", {"text": ["tuple"], "type": "code"}, " of ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Prim", "fallback_text": "hou.Prim", "fullpath": "/hom/hou/Prim", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"cppname": "HOM_Selection::prims"}, "type": "methods_item", "id": "prims"}, {"body": [{"indent": 4, "type": "para", "text": ["Returns a tuple of all points in the selection. If the selection does\n    not contain points, an implicit conversion to points is performed\n    to generate the return value."]}], "indent": 0, "text": [{"text": ["points(self, goe)"], "type": "code"}, "  \u2192 ", {"text": ["tuple"], "type": "code"}, " of ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Point", "fallback_text": "hou.Point", "fullpath": "/hom/hou/Point", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"cppname": "HOM_Selection::points"}, "type": "methods_item", "id": "points"}, {"body": [{"indent": 4, "type": "para", "text": ["Returns a tuple of all vertices in the selection. If the selection does\n    not contain vertices, an implicit conversion to vertices is performed\n    to generate the return value."]}], "indent": 0, "text": [{"text": ["vertices(self, goe)"], "type": "code"}, "  \u2192 ", {"text": ["tuple"], "type": "code"}, " of ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Vertex", "fallback_text": "hou.Vertex", "fullpath": "/hom/hou/Vertex", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"cppname": "HOM_Selection::vertices"}, "type": "methods_item", "id": "vertices"}, {"body": [{"indent": 4, "type": "para", "text": ["Returns a tuple of all edges in the selection. If the selection does\n    not contain edges, an implicit conversion to edges is performed\n    to generate the return value."]}], "indent": 0, "text": [{"text": ["edges(self, goe)"], "type": "code"}, "  \u2192 ", {"text": ["tuple"], "type": "code"}, " of ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Edge", "fallback_text": "hou.Edge", "fullpath": "/hom/hou/Edge", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"cppname": "HOM_Selection::edges"}, "type": "methods_item", "id": "edges"}, {"body": [{"indent": 4, "type": "para", "text": ["Returns a string that specifies the selected components. The format of\n    this string is appropriate for use in SOP Group parameter fields."]}, {"body": [{"body": [{"indent": 8, "type": "para", "text": ["A ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Geometry", "fallback_text": "hou.Geometry", "fullpath": "/hom/hou/Geometry", "scheme": "Hom", "type": "link"}, " object that is used when generating the selection\n        string (such as determining if all components are selected)."]}], "indent": 4, "type": "dt", "text": ["geo"]}, {"body": [{"indent": 8, "type": "para", "text": ["Set this to ", {"text": ["True"], "type": "code"}, " to force the generated string to contain only numeric\n        ranges, even if the selection was constructed with group or attribute\n        based selection."]}], "indent": 4, "type": "dt", "text": ["force_numeric"]}, {"body": [{"indent": 8, "type": "para", "text": ["Set this to ", {"text": ["True"], "type": "code"}, " to cause numeric ranges to be collapsed as much as\n        possible, regardless of the selection order. So for example if the\n        user selected primitive 3, then 2, then 1, the generated selection\n        string would either be '3 2 1' or '1-3' depending on this parameter."]}], "indent": 4, "type": "dt", "text": ["collapse_where_possible"]}, {"body": [{"indent": 8, "type": "para", "text": ["When this parameter is set to ", {"text": ["False"], "type": "code"}, ", if a selection contains all\n        components in the supplied geometry, the resulting value is an empty\n        string. This is appropriate when using the resulting string in a SOP\n        node Group parameter. If this parameter is set to ", {"text": ["True"], "type": "code"}, ", a full\n        selection will return a value of '*' instead."]}], "indent": 4, "type": "dt", "text": ["asterisk_to_select_all"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": [{"text": ["selectionString(self, geo, force_numeric = False, collapse_where_possible = True, asterisk_to_select_all = False)"], "type": "code"}, "  \u2192 ", {"text": ["str"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Selection::selectionString"}, "type": "methods_item", "id": "selectionString"}], "container": true, "role": "item_group", "type": "methods_item_group"}], "indent": 0, "level": 1, "text": "Methods", "role": "section", "container": true, "type": "methods_section", "id": "methods"}], "summary": ["A class that represents a geometry component selection."], "type": "root", "attrs": {"cppname": "HOM_Selection", "type": "homclass", "group": "geo"}, "title": [{"text": "hou.", "type": "supertitle"}, "Selection"]}