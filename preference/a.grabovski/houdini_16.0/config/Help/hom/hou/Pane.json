{"body": [{"indent": 0, "text": [{"text": "hou.", "type": "supertitle"}, "Pane"], "type": "title", "level": 0}, {"indent": 0, "type": "summary", "text": ["A rectangular area of the desktop that contains one or more pane tabs."]}, {"indent": 0, "type": "para", "text": ["Desktops (and floating panels) are composed of one or more panes.  Initially\na desktop contains one pane, and more panes are added to it by splitting\nexisting panes in two, either horizontally or vertically."]}, {"indent": 0, "type": "para", "text": ["See ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Desktop", "fallback_text": "hou.Desktop", "fullpath": "/hom/hou/Desktop", "scheme": "Hom", "type": "link"}, " for more information about panes and pane tabs.  See\n", {"_hs_sc": true, "text": "", "value": "/hom/hou/FloatingPanel", "fallback_text": "hou.FloatingPanel", "fullpath": "/hom/hou/FloatingPanel", "scheme": "Hom", "type": "link"}, " for more information about floating panels."]}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "text": ["Return the pane tabs in this pane."]}], "indent": 0, "text": [{"text": ["tabs(self)"], "type": "code"}, "  \u2192 tuple of ", {"_hs_sc": true, "text": "", "value": "/hom/hou/PaneTab", "fallback_text": "hou.PaneTab", "fullpath": "/hom/hou/PaneTab", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"cppname": "HOM_Pane::tabs"}, "type": "methods_item", "id": "tabs"}, {"body": [{"indent": 4, "type": "para", "text": ["Find and return a pane tab with the desired type, or ", {"text": ["None"], "type": "code"}, " if no such tab\n    exists in the pane."]}, {"indent": 4, "type": "para", "text": ["If there are multiple tabs in the pane with the desired type, then the\n    first found tab is returned.  Use 'index' to return the other tabs.  For\n    example, use 'index=0' to return the first found tab, use 'index=1' to\n    return the second found tab, etc."]}, {"indent": 4, "type": "para", "text": ["See also ", {"_hs_sc": true, "fragment": "#paneTabOfType", "text": "", "value": "/hom/hou/ui#paneTabOfType", "fallback_text": "hou.ui.paneTabOfType", "fullpath": "/hom/hou/ui#paneTabOfType", "scheme": "Hom", "type": "link"}, "."]}], "indent": 0, "text": [{"text": ["tabOfType(self, type, index=0)"], "type": "code"}, "  \u2192 ", {"_hs_sc": true, "text": "", "value": "/hom/hou/PaneTab", "fallback_text": "hou.PaneTab", "fullpath": "/hom/hou/PaneTab", "scheme": "Hom", "type": "link"}, " or ", {"text": ["None"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Pane::tabOfType"}, "type": "methods_item", "id": "tabOfType"}, {"body": [{"indent": 4, "type": "para", "text": ["Return the currently focused pane tab."]}, {"indent": 4, "type": "para", "text": ["See also ", {"_hs_sc": true, "fragment": "#setIsCurrentTab", "text": "", "value": "/hom/hou/PaneTab#setIsCurrentTab", "fallback_text": "hou.PaneTab.setIsCurrentTab", "fullpath": "/hom/hou/PaneTab#setIsCurrentTab", "scheme": "Hom", "type": "link"}, "."]}], "indent": 0, "text": [{"text": ["currentTab(self)"], "type": "code"}, "  \u2192 ", {"_hs_sc": true, "text": "", "value": "/hom/hou/PaneTab", "fallback_text": "hou.PaneTab", "fullpath": "/hom/hou/PaneTab", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"cppname": "HOM_Pane::currentTab"}, "type": "methods_item", "id": "currentTab"}, {"body": [{"indent": 4, "type": "para", "text": ["Create a new pane tab with the desired type and return it.  The new pane\n    tab will be current (i.e. it will be the pane tab that\u2019s open)."]}], "indent": 0, "text": [{"text": ["createTab(self, type)"], "type": "code"}, "  \u2192 ", {"_hs_sc": true, "text": "", "value": "/hom/hou/PaneTab", "fallback_text": "hou.PaneTab", "fullpath": "/hom/hou/PaneTab", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"cppname": "HOM_Pane::createTab"}, "type": "methods_item", "id": "createTab"}, {"body": [{"indent": 4, "type": "para", "text": ["Split the pane, adding a new pane to the right, and return the new pane.\n    The new pane will have a single tab whose type is the same as the type of\n    this pane\u2019s current tab."]}, {"indent": 4, "type": "para", "text": ["See also ", {"_hs_sc": true, "fragment": "#splitVertically", "text": "", "value": "/hom/hou/Pane#splitVertically", "fallback_text": "hou.Pane.splitVertically", "fullpath": "/hom/hou/Pane#splitVertically", "scheme": "Hom", "type": "link"}, "."]}], "indent": 0, "text": [{"text": ["splitHorizontally(self)"], "type": "code"}, "  \u2192 ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Pane", "fallback_text": "hou.Pane", "fullpath": "/hom/hou/Pane", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"cppname": "HOM_Pane::splitHorizontally", "replaces": "/commands/pane"}, "type": "methods_item", "id": "splitHorizontally"}, {"body": [{"indent": 4, "type": "para", "text": ["Split the pane, adding a new pane to the bottom, and return the new pane.\n    The new pane will have a single tab whose type is the same as the type of\n    this pane\u2019s current tab."]}, {"indent": 4, "type": "para", "text": ["See also ", {"_hs_sc": true, "fragment": "#splitHorizontally", "text": "", "value": "/hom/hou/Pane#splitHorizontally", "fallback_text": "hou.Pane.splitHorizontally", "fullpath": "/hom/hou/Pane#splitHorizontally", "scheme": "Hom", "type": "link"}, "."]}], "indent": 0, "text": [{"text": ["splitVertically(self)"], "type": "code"}, "  \u2192 ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Pane", "fallback_text": "hou.Pane", "fullpath": "/hom/hou/Pane", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"cppname": "HOM_Pane::splitVertically", "replaces": "/commands/pane"}, "type": "methods_item", "id": "splitVertically"}, {"body": [{"indent": 4, "type": "para", "text": ["Return the desktop in which this pane exists, or ", {"text": ["None"], "type": "code"}, " if it is in\n    a floating panel that\u2019s not attached to the desktop."]}], "indent": 0, "text": [{"text": ["desktop(self)"], "type": "code"}, "  \u2192 ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Desktop", "fallback_text": "hou.Desktop", "fullpath": "/hom/hou/Desktop", "scheme": "Hom", "type": "link"}, " or ", {"text": ["None"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Pane::desktop"}, "type": "methods_item", "id": "desktop"}, {"body": [{"indent": 4, "type": "para", "text": ["Return ", {"text": ["True"], "type": "code"}, " if this pane is maximized."]}], "indent": 0, "text": [{"text": ["isMaximized(self)"], "type": "code"}, "  \u2192 ", {"text": ["bool"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Pane::isMaximized"}, "type": "methods_item", "id": "isMaximized"}, {"body": [{"indent": 4, "type": "para", "text": ["Set the maximized state of this pane."]}], "indent": 0, "text": [{"text": ["setIsMaximized(self, on)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Pane::setIsMaximized"}, "type": "methods_item", "id": "setIsMaximized"}, {"body": [], "indent": 0, "text": [{"text": ["showsPaneBar(self)"], "type": "code"}], "role": "item", "attrs": {"status": "ni", "cppname": "HOM_Pane::showsPaneBar"}, "type": "methods_item", "id": "showsPaneBar"}, {"body": [], "indent": 0, "text": [{"text": ["showPaneBar(self, on)"], "type": "code"}], "role": "item", "attrs": {"status": "ni", "cppname": "HOM_Pane::showPaneBar"}, "type": "methods_item", "id": "showPaneBar"}, {"body": [], "indent": 0, "text": [{"text": ["sendKey(self, hotkey_name)"], "type": "code"}], "role": "item", "attrs": {"status": "ni", "cppname": "HOM_Pane::sendKey"}, "type": "methods_item", "id": "sendKey"}, {"body": [], "indent": 0, "text": [{"text": ["swapWithPane(self, pane)"], "type": "code"}], "role": "item", "attrs": {"status": "ni", "cppname": "HOM_Pane::swapWithPane", "replaces": "/commands/desk"}, "type": "methods_item", "id": "swapWithPane"}, {"body": [{"indent": 4, "type": "para", "text": ["Return the parent split Pane if the Pane is nested under a split"]}], "indent": 0, "text": [{"text": ["getSplitParent(self)"], "type": "code"}, "  \u2192 ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Pane", "fallback_text": "hou.Pane", "fullpath": "/hom/hou/Pane", "scheme": "Hom", "type": "link"}, " or ", {"text": ["None"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Pane::getSplitParent", "replaces": "/commands/split"}, "type": "methods_item", "id": "getSplitParent"}, {"body": [{"indent": 4, "type": "para", "text": ["Return the split child Pane at index if the Pane is a split"]}], "indent": 0, "text": [{"text": ["getSplitChild(self,index)"], "type": "code"}, "  \u2192 ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Pane", "fallback_text": "hou.Pane", "fullpath": "/hom/hou/Pane", "scheme": "Hom", "type": "link"}, " or ", {"text": ["None"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Pane::getSplitChild", "replaces": "/commands/split"}, "type": "methods_item", "id": "getSplitChild"}, {"body": [{"indent": 4, "type": "para", "text": ["Swap the left and right panes of an horizontal split Pane.\n    Swap the top and bottom panes of a vertical split Pane."]}], "indent": 0, "text": [{"text": ["splitSwap(self)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Pane::splitSwap", "replaces": "/commands/split"}, "type": "methods_item", "id": "splitSwap"}, {"body": [{"indent": 4, "type": "para", "text": ["Turn an horizontal split Pane into a vertical split Pane."]}], "indent": 0, "text": [{"text": ["splitRotate(self)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Pane::splitRotate", "replaces": "/commands/split"}, "type": "methods_item", "id": "splitRotate"}, {"body": [{"indent": 4, "type": "para", "text": ["Return the true if the Pane is minimized on the split.\n    A split can\u2019t minimized and maximized at the same time.\n    In its default state, a split is not minimized and not maximized."]}], "indent": 0, "text": [{"text": ["isSplitMinimized(self)"], "type": "code"}, "  \u2192 ", {"text": ["bool"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Pane::isSplitMinimized", "replaces": "/commands/split"}, "type": "methods_item", "id": "isSplitMinimized"}, {"body": [{"indent": 4, "type": "para", "text": ["Return the true if the Pane is maximized on the split.\n    A split can\u2019t minimized and maximized at the same time.\n    In its default state, a split is not minimized and not maximized."]}], "indent": 0, "text": [{"text": ["isSplitMaximized(self)"], "type": "code"}, "  \u2192 ", {"text": ["bool"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Pane::isSplitMaximized", "replaces": "/commands/split"}, "type": "methods_item", "id": "isSplitMaximized"}, {"body": [{"indent": 4, "type": "para", "text": ["Set the maximized state of a split."]}], "indent": 0, "text": [{"text": ["setIsSplitMaximized(self, on)"], "type": "code"}, "  \u2192 ", {"text": ["bool"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Pane::setIsSplitMaximized", "replaces": "/commands/split"}, "type": "methods_item", "id": "setIsSplitMaximized"}, {"body": [{"indent": 4, "type": "para", "text": ["Return True if the pane is a split."]}], "indent": 0, "text": [{"text": ["isSplit(self)"], "type": "code"}, "  \u2192 ", {"text": ["bool"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Pane::isSplit", "replaces": "/commands/split"}, "type": "methods_item", "id": "isSplit"}, {"body": [{"indent": 4, "type": "para", "text": ["Set the split fraction of the parent split."]}], "indent": 0, "text": [{"text": ["setSplitFraction(self,fraction)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Pane::setSplitFraction", "replaces": "/commands/split"}, "type": "methods_item", "id": "setSplitFraction"}, {"body": [{"indent": 4, "type": "para", "text": ["Return the split fraction of the parent split."]}], "indent": 0, "text": [{"text": ["getSplitFraction(self,fraction)"], "type": "code"}, "  \u2192 ", {"text": ["double"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Pane::getSplitFraction", "replaces": "/commands/split"}, "type": "methods_item", "id": "getSplitFraction"}, {"body": [{"indent": 4, "type": "para", "text": ["Set the split direction of the parent split."]}], "indent": 0, "text": [{"text": ["setSplitDirection(self,dir)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Pane::setSplitDirection", "replaces": "/commands/split"}, "type": "methods_item", "id": "setSplitDirection"}, {"body": [{"indent": 4, "type": "para", "text": ["Return the split direction of the parent split."]}], "indent": 0, "text": [{"text": ["getSplitDirection(self,dir)"], "type": "code"}, "  \u2192 ", {"text": ["double"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Pane::getSplitDirection", "replaces": "/commands/split"}, "type": "methods_item", "id": "getSplitDirection"}], "container": true, "role": "item_group", "type": "methods_item_group"}], "indent": 0, "level": 1, "text": "Methods", "role": "section", "container": true, "type": "methods_section", "id": "methods"}], "summary": ["A rectangular area of the desktop that contains one or more pane tabs."], "type": "root", "attrs": {"cppname": "HOM_Pane", "type": "homclass", "group": "ui"}, "title": [{"text": "hou.", "type": "supertitle"}, "Pane"]}