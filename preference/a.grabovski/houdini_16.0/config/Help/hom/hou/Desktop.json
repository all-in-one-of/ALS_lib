{"body": [{"indent": 0, "text": [{"text": "hou.", "type": "supertitle"}, "Desktop"], "type": "title", "level": 0}, {"indent": 0, "type": "summary", "text": ["Class representing a Houdini desktop (a pane layout)."]}, {"indent": 0, "type": "para", "text": ["A desktop contains one or more panes.  Each pane contains one or more pane\ntabs of various types (scene viewer, parameters, network editor, etc.)  The\nmain desktop window can be split horizontally or vertically into two panes,\nand each pane can itself be split horizontally or vertically."]}, {"indent": 0, "type": "para", "text": ["Note that a floating panel also contains one or more panes and a floating panel\nmay optionally be attached to a desktop."]}, {"indent": 0, "type": "para", "text": ["The methods in this class that return pane tabs, panes, and floating panels\nonly return those objects that are attached to (i.e. saved with) the desktop.\nTo access all the visible pane tabs, panes, and floating panels, including\nthose not attached to any desktop, use the functions in ", {"_hs_sc": true, "text": "", "value": "/hom/hou/ui", "fallback_text": "hou.ui", "fullpath": "/hom/hou/ui", "scheme": "Hom", "type": "link"}, "."]}, {"indent": 0, "type": "para", "text": ["See also ", {"_hs_sc": true, "fragment": "#curDesktop", "text": "", "value": "/hom/hou/ui#curDesktop", "fallback_text": "hou.ui.curDesktop", "fullpath": "/hom/hou/ui#curDesktop", "scheme": "Hom", "type": "link"}, ", ", {"_hs_sc": true, "fragment": "#ui/desktops", "text": "", "value": "/hom/hou#ui/desktops", "fallback_text": "hou.ui.desktops", "fullpath": "/hom/hou#ui/desktops", "scheme": "Hom", "type": "link"}, ", ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Pane", "fallback_text": "hou.Pane", "fullpath": "/hom/hou/Pane", "scheme": "Hom", "type": "link"}, ",\n", {"_hs_sc": true, "text": "", "value": "/hom/hou/PaneTab", "fallback_text": "hou.PaneTab", "fullpath": "/hom/hou/PaneTab", "scheme": "Hom", "type": "link"}, ", and ", {"_hs_sc": true, "text": "", "value": "/hom/hou/FloatingPanel", "fallback_text": "hou.FloatingPanel", "fullpath": "/hom/hou/FloatingPanel", "scheme": "Hom", "type": "link"}, "."]}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "text": ["Return the desktop\u2019s name."]}, {"indent": 4, "type": "para", "text": ["Each desktop has a unique  name. The desktop\u2019s name cannot\n    be changed through either the scripting interface or through Houdini."]}], "indent": 0, "text": [{"text": ["name(self)"], "type": "code"}, "  \u2192 ", {"text": ["str"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Desktop::name", "replaces": "/commands/desk"}, "type": "methods_item", "id": "name"}, {"body": [{"indent": 4, "type": "para", "text": ["Make this desktop the currently selected one.  See also\n    ", {"_hs_sc": true, "fragment": "#desktops", "text": "", "value": "/hom/hou/ui#desktops", "fallback_text": "hou.ui.desktops", "fullpath": "/hom/hou/ui#desktops", "scheme": "Hom", "type": "link"}, "."]}, {"indent": 4, "type": "para", "text": ["This example changes to the animate desktop:"]}, {"lang": "python", "indent": 4, "type": "pre", "text": ["\n    desktops_dict = dict((d.name(), d) for d in hou.ui.desktops())\n    desktops_dict['Animate'].setAsCurrent()\n    "]}], "indent": 0, "text": [{"text": ["setAsCurrent(self)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Desktop::setAsCurrent", "replaces": "/commands/desk"}, "type": "methods_item", "id": "setAsCurrent"}, {"body": [{"indent": 4, "type": "para", "text": ["Return the panes inside this desktop.  Note that the result includes panes\n    in floating panels as long as they are attached to the desktop."]}, {"indent": 4, "type": "para", "text": ["The following function will return all visible panes, regardless of\n    whether or not they are attached to a desktop:"]}, {"lang": "python", "indent": 4, "type": "pre", "text": ["\n    def allPanes():\n        '''Return a tuple of all visible panes, regardless of whether or not\n           they are attached to a desktop.'''\n        # Loop through all the pane tabs and add each tab's pane to the result\n        # if it's not already there.  Note that the only way to uniquely\n        # identify a pane is using its id.\n        ids_to_panes = {}\n        for pane_tab in hou.ui.paneTabs():\n            pane = pane_tab.pane()\n            if pane.id() not in ids_to_panes:\n                ids_to_panes[pane.id()] = pane\n        return ids_to_panes.values()\n    "]}], "indent": 0, "text": [{"text": ["panes(self)"], "type": "code"}, "  \u2192 tuple of ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Pane", "fallback_text": "hou.Pane", "fullpath": "/hom/hou/Pane", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"cppname": "HOM_Desktop::panes", "replaces": "/commands/pane"}, "type": "methods_item", "id": "panes"}, {"body": [{"indent": 4, "type": "para", "text": ["Return all the floating panels attached to this desktop."]}, {"indent": 4, "type": "para", "text": ["Use ", {"_hs_sc": true, "fragment": "#floatingPanels", "text": "", "value": "/hom/hou/ui#floatingPanels", "fallback_text": "hou.ui.floatingPanels", "fullpath": "/hom/hou/ui#floatingPanels", "scheme": "Hom", "type": "link"}, " to get all the visible floating panels,\n    including those not attached to this desktop."]}, {"indent": 4, "type": "para", "text": ["See also ", {"_hs_sc": true, "fragment": "#floatingPaneTabs", "text": "", "value": "/hom/hou/Desktop#floatingPaneTabs", "fallback_text": "hou.Desktop.floatingPaneTabs", "fullpath": "/hom/hou/Desktop#floatingPaneTabs", "scheme": "Hom", "type": "link"}, "."]}], "indent": 0, "text": [{"text": ["floatingPanels(self)"], "type": "code"}, "  \u2192 tuple of ", {"_hs_sc": true, "text": "", "value": "/hom/hou/FloatingPanel", "fallback_text": "hou.FloatingPanel", "fullpath": "/hom/hou/FloatingPanel", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"cppname": "HOM_Desktop::floatingPanels"}, "type": "methods_item", "id": "floatingPanels"}, {"body": [{"indent": 4, "type": "para", "text": ["Return the pane tabs that are contained in this desktop or are in floating\n    panels attached to this desktop."]}, {"indent": 4, "type": "para", "text": ["This method does not return floating pane tabs that are not attached to\n    this desktop.  Use ", {"_hs_sc": true, "fragment": "#paneTabs", "text": "", "value": "/hom/hou/ui#paneTabs", "fallback_text": "hou.ui.paneTabs", "fullpath": "/hom/hou/ui#paneTabs", "scheme": "Hom", "type": "link"}, " to get all the visible pane tabs,\n    regardless of whether they are attached to this desktop."]}], "indent": 0, "text": [{"text": ["paneTabs(self)"], "type": "code"}, "  \u2192 tuple of ", {"_hs_sc": true, "text": "", "value": "/hom/hou/PaneTab", "fallback_text": "hou.PaneTab", "fullpath": "/hom/hou/PaneTab", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"cppname": "HOM_Desktop::paneTabs", "replaces": "/commands/pane"}, "type": "methods_item", "id": "paneTabs"}, {"body": [{"indent": 4, "type": "para", "text": ["Return the pane tabs that are contained in this desktop or are in floating\n    panels attached to this desktop and are currently selected in their\n    containing panes."]}, {"indent": 4, "type": "para", "text": ["This method does not return floating pane tabs that are not attached to\n    this desktop.  Use ", {"_hs_sc": true, "fragment": "#currentPaneTabs", "text": "", "value": "/hom/hou/ui#currentPaneTabs", "fallback_text": "hou.ui.currentPaneTabs", "fullpath": "/hom/hou/ui#currentPaneTabs", "scheme": "Hom", "type": "link"}, " to get all the selected pane tabs,\n    regardless of whether they are attached to this desktop."]}], "indent": 0, "text": [{"text": ["currentPaneTabs(self)"], "type": "code"}, "  \u2192 tuple of ", {"_hs_sc": true, "text": "", "value": "/hom/hou/PaneTab", "fallback_text": "hou.PaneTab", "fullpath": "/hom/hou/PaneTab", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"cppname": "HOM_Desktop::currentPaneTabs", "replaces": "/commands/pane"}, "type": "methods_item", "id": "currentPaneTabs"}, {"body": [{"indent": 4, "type": "para", "text": ["Return all the pane tabs in floating panels that are attached to this\n    desktop."]}], "indent": 0, "text": [{"text": ["floatingPaneTabs(self)"], "type": "code"}, "  \u2192 tuple of ", {"_hs_sc": true, "text": "", "value": "/hom/hou/PaneTab", "fallback_text": "hou.PaneTab", "fullpath": "/hom/hou/PaneTab", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"cppname": "HOM_Desktop::floatingPaneTabs"}, "type": "methods_item", "id": "floatingPaneTabs"}, {"body": [{"indent": 4, "type": "para", "text": ["Find and return the pane tab with the desired type.  If no such tab\n    exists, return None.  Like ", {"_hs_sc": true, "fragment": "#paneTabs", "text": "", "value": "/hom/hou/Desktop#paneTabs", "fallback_text": "hou.Desktop.paneTabs", "fullpath": "/hom/hou/Desktop#paneTabs", "scheme": "Hom", "type": "link"}, ", this method\n    searches pane tabs in the desktop or in floating panels attached to the\n    desktop."]}, {"indent": 4, "type": "para", "text": ["Use ", {"_hs_sc": true, "fragment": "#paneTabOfType", "text": "", "value": "/hom/hou/ui#paneTabOfType", "fallback_text": "hou.ui.paneTabOfType", "fullpath": "/hom/hou/ui#paneTabOfType", "scheme": "Hom", "type": "link"}, " to search all the visible pane tabs,\n    regardless of whether they are attached to this desktop."]}, {"body": [{"body": [{"indent": 8, "type": "para", "text": ["A ", {"_hs_sc": true, "text": "", "value": "/hom/hou/paneTabType", "fallback_text": "hou.paneTabType", "fullpath": "/hom/hou/paneTabType", "scheme": "Hom", "type": "link"}, " enumerated variable."]}], "indent": 4, "type": "dt", "text": ["type"]}, {"body": [{"indent": 8, "type": "para", "text": ["If there are multiple tabs with the desired type, this parameter\n        determines which one is returned.  Use ", {"text": ["index=0"], "type": "code"}, " to return the first\n        found tab, ", {"text": ["index=1"], "type": "code"}, " to return the second found tab, etc.  By default,\n        index is 0."]}], "indent": 4, "type": "dt", "text": ["index"]}], "container": true, "type": "dt_group"}, {"indent": 4, "type": "para", "text": ["This method can be approximately implemented as follows:"]}, {"lang": "python", "indent": 4, "type": "pre", "text": ["\n    def paneTabOfType(self, tab_type, index=0):\n        pane_tabs = [t for t in self.paneTabs() if t.type() == tab_type]\n\n        if max(index, 0) > len(pane_tabs):\n            return None\n        return pane_tabs[max(index, 0)]\n    "]}], "indent": 0, "text": [{"text": ["paneTabOfType(self, type, index=0)"], "type": "code"}, "  \u2192 ", {"_hs_sc": true, "text": "", "value": "/hom/hou/PaneTab", "fallback_text": "hou.PaneTab", "fullpath": "/hom/hou/PaneTab", "scheme": "Hom", "type": "link"}, " or ", {"text": ["None"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Desktop::paneTabOfType"}, "type": "methods_item", "id": "paneTabOfType"}, {"body": [{"indent": 4, "type": "para", "text": ["Return the pane tab with the given name, or ", {"text": ["None"], "type": "code"}, " if no such tab exists.\n    Like ", {"_hs_sc": true, "fragment": "#paneTabs", "text": "", "value": "/hom/hou/Desktop#paneTabs", "fallback_text": "hou.Desktop.paneTabs", "fullpath": "/hom/hou/Desktop#paneTabs", "scheme": "Hom", "type": "link"}, ", this method searches pane tabs in the\n    desktop or in floating panels attached to the desktop."]}, {"indent": 4, "type": "para", "text": ["The name may optionally be prefixed by the desktop name and a period."]}, {"indent": 4, "type": "para", "text": ["Use ", {"_hs_sc": true, "fragment": "#findPaneTab", "text": "", "value": "/hom/hou/ui#findPaneTab", "fallback_text": "hou.ui.findPaneTab", "fullpath": "/hom/hou/ui#findPaneTab", "scheme": "Hom", "type": "link"}, " to search all the visible pane tabs,\n    regardless of whether they are attached to this desktop."]}], "indent": 0, "text": [{"text": ["findPaneTab(self, name)"], "type": "code"}, "  \u2192 ", {"_hs_sc": true, "text": "", "value": "/hom/hou/PaneTab", "fallback_text": "hou.PaneTab", "fullpath": "/hom/hou/PaneTab", "scheme": "Hom", "type": "link"}, " or None"], "role": "item", "attrs": {"cppname": "HOM_Desktop::findPaneTab"}, "type": "methods_item", "id": "findPaneTab"}, {"body": [], "indent": 0, "text": [{"text": ["sceneViewers(self)"], "type": "code"}, "  \u2192 tuple of ", {"_hs_sc": true, "text": "", "value": "/hom/hou/SceneViewer", "fallback_text": "hou.SceneViewer", "fullpath": "/hom/hou/SceneViewer", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"status": "ni", "cppname": "HOM_Desktop::sceneViewers", "replaces": "/commands/viewls"}, "type": "methods_item", "id": "sceneViewers"}, {"body": [{"indent": 4, "type": "para", "text": ["Create and return a new floating window containing a single pane tab.  Note\n    that this method creates a floating panel with a single pane tab, and the\n    graphical interface to add more tabs or split the pane inside the panel\n    is not exposed."]}, {"body": [{"body": [{"indent": 8, "type": "para", "text": ["A ", {"_hs_sc": true, "text": "", "value": "/hom/hou/paneTabType", "fallback_text": "hou.paneTabType", "fullpath": "/hom/hou/paneTabType", "scheme": "Hom", "type": "link"}, " enumerated variable."]}], "indent": 4, "type": "dt", "text": ["pane_tab_type"]}, {"body": [{"indent": 8, "type": "para", "text": ["A tuple of two floats specifying the X and Y positions of the new\n        window, respectively.  The window will open near this position,\n        not necessarily exactly at this position.  If this value is an empty\n        tuple, Houdini will choose a default location."]}], "indent": 4, "type": "dt", "text": ["position"]}, {"body": [{"indent": 8, "type": "para", "text": ["A tuple of two floats specifying the width and height of the new\n        window, respectively.  If this value is an empty tuple, Houdini will\n        choose a default size."]}], "indent": 4, "type": "dt", "text": ["size"]}], "container": true, "type": "dt_group"}, {"indent": 4, "type": "para", "text": ["Also note that the floating panel containing the new pane tab does not\n    contain any panes: calling ", {"_hs_sc": true, "fragment": "#pane", "text": "", "value": "/hom/hou/PaneTab#pane", "fallback_text": "hou.PaneTab.pane", "fullpath": "/hom/hou/PaneTab#pane", "scheme": "Hom", "type": "link"}, " on the pane tab returns\n    None, and calling ", {"_hs_sc": true, "fragment": "#panes", "text": "", "value": "/hom/hou/FloatingPanel#panes", "fallback_text": "hou.FloatingPanel.panes", "fullpath": "/hom/hou/FloatingPanel#panes", "scheme": "Hom", "type": "link"}, " on its floating panel\n    returns an empty tuple.  See ", {"_hs_sc": true, "text": "", "value": "/hom/hou/FloatingPanel", "fallback_text": "hou.FloatingPanel", "fullpath": "/hom/hou/FloatingPanel", "scheme": "Hom", "type": "link"}, " for more information\n    on these stripped down floating panels."]}, {"indent": 4, "type": "para", "text": ["See also ", {"_hs_sc": true, "fragment": "#createFloatingPanel", "text": "", "value": "/hom/hou/Desktop#createFloatingPanel", "fallback_text": "hou.Desktop.createFloatingPanel", "fullpath": "/hom/hou/Desktop#createFloatingPanel", "scheme": "Hom", "type": "link"}, "."]}, {"indent": 4, "type": "para", "text": ["The following example function takes a ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Node", "fallback_text": "hou.Node", "fullpath": "/hom/hou/Node", "scheme": "Hom", "type": "link"}, " and opens a floating\n    parameter pane pinned to that node."]}, {"lang": "python", "indent": 4, "type": "pre", "text": ["\n    def openParmPane(node):\n        '''Open a floating parameter pane for a particular node.'''\n        pane_tab = hou.ui.curDesktop().createFloatingPaneTab(hou.paneTabType.Parm)\n        pane_tab.setCurrentNode(node)\n        pane_tab.setPin(True)\n        return pane_tab\n    "]}], "indent": 0, "text": [{"text": ["createFloatingPaneTab(self, pane_tab_type, position=(), size=())"], "type": "code"}, "  \u2192 ", {"_hs_sc": true, "text": "", "value": "/hom/hou/PaneTab", "fallback_text": "hou.PaneTab", "fullpath": "/hom/hou/PaneTab", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"cppname": "HOM_Desktop::createFloatingPaneTab", "replaces": "/commands/pane"}, "type": "methods_item", "id": "createFloatingPaneTab"}, {"body": [{"indent": 4, "type": "para", "text": ["Create a floating panel and return it.  The returned floating panel\n    contains one pane which contains one pane tab of the desired type."]}, {"indent": 4, "type": "para", "text": ["See ", {"_hs_sc": true, "fragment": "#createFloatingPaneTab", "text": "", "value": "/hom/hou/Desktop#createFloatingPaneTab", "fallback_text": "hou.Desktop.createFloatingPaneTab", "fullpath": "/hom/hou/Desktop#createFloatingPaneTab", "scheme": "Hom", "type": "link"}, " for a description of the\n    parameters.  This method differs from createFloatingPaneTab in two ways:\n    First, it returns the floating panel instead of the pane tab.  Second,\n    the floating panel that is created from this method is not locked down,\n    and the user can add more pane tabs and split the panes."]}, {"indent": 4, "type": "para", "text": ["The following example creates a floating panel with a parameters pane tab\n    and a channel viewer (motion viewer) pane tab:"]}, {"lang": "python", "indent": 4, "type": "pre", "text": ["\n    panel = hou.ui.curDesktop().createFloatingPanel(hou.paneTabType.Parm)\n    pane1 = panel.panes()[0]\n    pane2 = pane1.splitVertically()\n    pane2.tabs()[0].setType(hou.paneTabType.ChannelViewer)\n    "]}], "indent": 0, "text": [{"text": ["createFloatingPanel(self, pane_tab_type, position=(), size=())"], "type": "code"}, "  \u2192 ", {"_hs_sc": true, "text": "", "value": "/hom/hou/FloatingPanel", "fallback_text": "hou.FloatingPanel", "fullpath": "/hom/hou/FloatingPanel", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"cppname": "HOM_Desktop::createFloatingPanel"}, "type": "methods_item", "id": "createFloatingPanel"}, {"body": [{"indent": 4, "type": "para", "text": ["Return the shelf dock for the current desktop."]}], "indent": 0, "text": [{"text": ["shelfDock(self)"], "type": "code"}, "  \u2192 ", {"_hs_sc": true, "text": "", "value": "/hom/hou/ShelfDock", "fallback_text": "hou.ShelfDock", "fullpath": "/hom/hou/ShelfDock", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"cppname": "HOM_Desktop::shelfDock"}, "type": "methods_item", "id": "shelfDock"}, {"body": [{"indent": 4, "type": "para", "text": ["Loads the help for the specified node type in the last opened help browser\n    pane tab.  Creates a help browser pane tab if no such pane tab already\n    exists."]}], "indent": 0, "text": [{"text": ["displayHelp(self, node_type)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Desktop::displayHelp"}, "type": "methods_item", "id": "displayHelp"}, {"body": [{"indent": 4, "type": "para", "text": ["Loads the help for the specified help path in the last opened help browser\n    pane tab.  Creates a help browser pane tab if no such pane tab already\n    exists.  The path can either be a Houdini help URL (i.e. op:Sop/copy,\n    tool:curve) or a raw help path (i.e.  /nodes/sop/copy, shelf/curve)."]}], "indent": 0, "text": [{"text": ["displayHelpPath(self, help_path)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Desktop::displayHelpPath"}, "type": "methods_item", "id": "displayHelpPath"}, {"body": [{"indent": 4, "type": "para", "text": ["Loads the help for the python panel with the specified name in the last\n    opened help browser pane tab.  Creates a help browser pane tab if no such\n    pane tab already exists."]}, {"indent": 4, "type": "para", "text": ["Raises HOM_Error if the interface name is invalid."]}], "indent": 0, "text": [{"text": ["displayHelpPyPanel(self, interface_name)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Desktop::displayHelpPyPanel"}, "type": "methods_item", "id": "displayHelpPyPanel"}, {"body": [{"indent": 4, "type": "para", "text": ["Show or hide the side help pane."]}, {"indent": 4, "type": "para", "text": ["If show is set to True (default) this method displays the help pane and\n    returns a help browser pane tab.  If set to False then this method hides\n    the help browser pane at the side of the desktop and returns None."]}], "indent": 0, "text": [{"text": ["displaySideHelp(self, show=True)"], "type": "code"}, "  \u2192 ", {"_hs_sc": true, "text": "", "value": "/hom/hou/PaneTab", "fallback_text": "hou.PaneTab", "fullpath": "/hom/hou/PaneTab", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"cppname": "HOM_Desktop::displaySideHelp"}, "type": "methods_item", "id": "displaySideHelp"}, {"body": [], "indent": 0, "text": [{"text": ["homePage(self)"], "type": "code"}], "role": "item", "attrs": {"status": "ni", "cppname": "HOM_Desktop::homePage", "replaces": "/commands/helpbrowser"}, "type": "methods_item", "id": "homePage"}, {"body": [], "indent": 0, "text": [{"text": ["setHomePage(self, home_page)"], "type": "code"}], "role": "item", "attrs": {"status": "ni", "cppname": "HOM_Desktop::setHomePage", "replaces": "/commands/helpbrowser"}, "type": "methods_item", "id": "setHomePage"}, {"body": [], "indent": 0, "text": [{"text": ["paneTabLinkNumbers(self)"], "type": "code"}, "  \u2192 tuple of numbers / ", {"text": ["None"], "type": "code"}], "role": "item", "attrs": {"status": "ni", "cppname": "HOM_Desktop::paneLinkNumbers"}, "type": "methods_item", "id": "paneTabLinkNumbers"}, {"body": [], "indent": 0, "text": [{"text": ["panesTabInLinkNumber(self, number)"], "type": "code"}, "  \u2192 tuple of ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Pane", "fallback_text": "hou.Pane", "fullpath": "/hom/hou/Pane", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"status": "ni", "cppname": "HOM_Desktop::panesInLinkNumber"}, "type": "methods_item", "id": "panesTabInLinkNumber"}, {"body": [], "indent": 0, "text": [{"text": ["pathBasedPaneTabLinkNumbers(self)"], "type": "code"}, "  \u2192 tuple of numbers / ", {"text": ["None"], "type": "code"}], "role": "item", "attrs": {"status": "ni", "cppname": "HOM_Desktop::pathBasedPaneLinkNumbers", "replaces": "/commands/panepath"}, "type": "methods_item", "id": "pathBasedPaneTabLinkNumbers"}, {"body": [], "indent": 0, "text": [{"text": ["pathBasedPanesTabInLinkNumber(self, number)"], "type": "code"}, "  \u2192 tuple of ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Pane", "fallback_text": "hou.Pane", "fullpath": "/hom/hou/Pane", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"status": "ni", "cppname": "HOM_Desktop::pathBasedPanesInLinkNumber"}, "type": "methods_item", "id": "pathBasedPanesTabInLinkNumber"}, {"body": [], "indent": 0, "text": [{"text": ["setPathForAllPaneTabs(self, path)"], "type": "code"}], "role": "item", "attrs": {"status": "ni", "cppname": "HOM_Desktop::setPathForAllPanes", "replaces": "/commands/panepath"}, "type": "methods_item", "id": "setPathForAllPaneTabs"}, {"body": [{"indent": 4, "type": "para", "text": ["Return the ", {"_hs_sc": true, "text": "", "value": "/hom/hou/Pane", "fallback_text": "hou.Pane", "fullpath": "/hom/hou/Pane", "scheme": "Hom", "type": "link"}, " object located under the mouse cursor.  Return\n    ", {"text": ["None"], "type": "code"}, " if no pane is located under the mouse cursor."]}], "indent": 0, "text": [{"text": ["paneUnderCursor(self)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Desktop::paneUnderCursor"}, "type": "methods_item", "id": "paneUnderCursor"}, {"body": [{"indent": 4, "type": "para", "text": ["Similar to ", {"_hs_sc": true, "fragment": "#paneUnderCursor", "text": "", "value": "/hom/hou/Desktop#paneUnderCursor", "fallback_text": "hou.Desktop.paneUnderCursor", "fullpath": "/hom/hou/Desktop#paneUnderCursor", "scheme": "Hom", "type": "link"}, " but return the\n    ", {"_hs_sc": true, "text": "", "value": "/hom/hou/PaneTab", "fallback_text": "hou.PaneTab", "fullpath": "/hom/hou/PaneTab", "scheme": "Hom", "type": "link"}, " object instead located under the mouse cursor.  Return\n    ", {"text": ["None"], "type": "code"}, " if no pane tab is located under the mouse cursor."]}], "indent": 0, "text": [{"text": ["paneTabUnderCursor(self)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_Desktop::paneTabUnderCursor"}, "type": "methods_item", "id": "paneTabUnderCursor"}], "container": true, "role": "item_group", "type": "methods_item_group"}], "indent": 0, "level": 1, "text": "Methods", "role": "section", "container": true, "type": "methods_section", "id": "methods"}], "summary": ["Class representing a Houdini desktop (a pane layout)."], "type": "root", "attrs": {"cppname": "HOM_Desktop", "type": "homclass", "group": "ui"}, "title": [{"text": "hou.", "type": "supertitle"}, "Desktop"]}