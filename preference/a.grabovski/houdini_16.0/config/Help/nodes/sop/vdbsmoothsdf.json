{"body": [{"indent": 0, "text": ["VDB Smooth SDF"], "type": "title", "level": 0}, {"indent": 0, "type": "summary", "text": ["Smooths out SDF values in a VDB volume primitive."]}, {"type": "para", "indent": 0, "text": ["See ", {"_hs_sc": true, "text": ["volumes"], "value": "/model/volumes", "fullpath": "/model/volumes", "scheme": null, "type": "link"}, " for an explanation of standard volumes and OpenVDB volumes."]}, {"indent": 0, "type": "para", "text": ["This node applies a simulated flow operation, moving the surface of the signed distance field according to some local property."]}, {"indent": 0, "type": "para", "text": ["For example, if you move along the normal by an amount dependent on the\ncurvature, you will flatten out dimples and hills and leave flat areas\nunchanged."]}, {"indent": 0, "type": "para", "text": ["Unlike the ", {"_hs_sc": true, "text": ["VDB Smooth SOP"], "value": "/nodes/sop/vdbsmooth", "fullpath": "/nodes/sop/vdbsmooth", "scheme": "Node", "type": "link"}, ", this node ensure the SDF remains valid."]}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "text": ["The VDB primitives to be smoothed.\n    See ", {"_hs_sc": true, "fragment": "#group", "text": ["specifying volumes"], "value": "/model/volumes#group", "fullpath": "/model/volumes#group", "scheme": null, "type": "link"}, " for more information."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Group"]}, {"body": [{"type": "para", "indent": 4, "text": ["If enabled, it will use the second input\u2019s VDB for alpha masking. Assumes\n    voxel values are between 0 to 1 inclusive.\n    See ", {"_hs_sc": true, "fragment": "#group", "text": ["specifying volumes"], "value": "/model/volumes#group", "fullpath": "/model/volumes#group", "scheme": null, "type": "link"}, " for more information."]}], "indent": 0, "text": ["Alpha Mask"], "role": "item", "attrs": {"id": "maskname"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["What sort of smoothing process to apply to the VDB."]}, {"body": [{"body": [{"indent": 8, "type": "para", "text": ["Find the mean (", {"text": ["total/count"], "type": "code"}, ") of the surrounding values.\n        This is equivalent to a box blur of the same radius."]}], "indent": 4, "type": "dt", "text": ["Mean Value"]}, {"body": [{"indent": 8, "type": "para", "text": ["Find the median (middle value) of the surrounding values.\n        This is useful for de-spiking noisy data as extreme values will not contribute to the final result."]}], "indent": 4, "type": "dt", "text": ["Median Value"]}, {"body": [{"indent": 8, "type": "para", "text": ["Finds the average curvature at each location.\n        Moves the surface along the local surface normal to flatten out bumps."]}], "indent": 4, "type": "dt", "text": ["Mean Curvature Flow"]}, {"body": [{"indent": 8, "type": "para", "text": ["Finds the local \"Laplacian\" to control how much to move along\n        the normal."]}], "indent": 4, "type": "dt", "text": ["Laplacian Flow"]}], "container": true, "type": "dt_group"}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Operation"]}, {"body": [{"type": "para", "indent": 4, "text": ["The number of voxels to run the smooth operation over.\n    This is measured in voxels, not distance.\n    This distance defines a ", {"text": ["cube"], "type": "em"}, ", so increasing the \"radius\" will exponentially increase the work."]}], "indent": 0, "text": ["Filter Voxel Radius"], "role": "item", "attrs": {"id": "radius"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["Number of times to repeat the smoothing operation."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Iterations"]}, {"body": [{"type": "para", "indent": 4, "text": ["Inverts the alpha mask so that values from 0-1 maps to 1-0."]}], "indent": 0, "text": ["Invert Alpha Mask"], "role": "item", "attrs": {"id": "invert"}, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "text": ["Alpha mask values below this are mapped to 0."]}], "indent": 0, "text": ["Min Mask Cutoff"], "role": "item", "attrs": {"id": "minmask"}, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "text": ["Alpha mask values above this are mapped to 1."]}], "indent": 0, "text": ["Max Mask Cutoff"], "role": "item", "attrs": {"id": "maxmask"}, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "bullet", "text": [{"_hs_sc": true, "text": "", "value": "/nodes/sop/vdbsmooth", "fullpath": "/nodes/sop/vdbsmooth", "scheme": "Node", "type": "link"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": [{"_hs_sc": true, "text": "", "value": "/nodes/sop/vdbreshapesdf", "fullpath": "/nodes/sop/vdbreshapesdf", "scheme": "Node", "type": "link"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": [{"_hs_sc": true, "text": "", "value": "/nodes/sop/vdbrenormalizesdf", "fullpath": "/nodes/sop/vdbrenormalizesdf", "scheme": "Node", "type": "link"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "container": true, "type": "related_section", "id": "related"}], "title": ["VDB Smooth SDF"], "summary": ["Smooths out SDF values in a VDB volume primitive."], "attrs": {"version": null, "tags": "vdb, merge", "namespace": null, "internal": "vdbsmoothsdf", "context": "sop", "type": "node", "icon": "COMMON/openvdb"}, "included": ["/nodes/sop/vdbrenormalizesdf.txt", "/nodes/sop/vdbsmooth.txt", "/nodes/sop/volume_types.txt"], "type": "root"}