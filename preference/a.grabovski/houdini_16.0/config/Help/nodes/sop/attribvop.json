{"body": [{"indent": 0, "text": ["Attribute VOP"], "type": "title", "level": 0}, {"indent": 0, "type": "summary", "text": ["Runs a VOP network to modify geometry attributes."]}, {"indent": 0, "type": "para", "text": ["Double-click this node to build a VOP network inside.\n(Alternatively, you can specify a SHOP node containing the VOP network,\nor specify a ", {"text": [".vfl"], "type": "code"}, " file containing the CVEX program.)"]}, {"body": [{"body": [{"indent": 4, "type": "para", "text": ["The VOP network runs in the CVEX context, not the SOP context.\n    This means SOP specific VOPs and VEX operations are not available.\n    Instead use the From File variants and the provided operator input strings."]}], "indent": 0, "role": "item", "type": "note"}], "container": true, "role": "item_group", "type": "note_group"}, {"indent": 0, "type": "para", "text": ["This node modifies geometry attributes."]}, {"indent": 0, "type": "para", "text": ["Create ", {"_hs_sc": true, "text": ["Parameter VOPs"], "value": "/nodes/vop/parameter", "fullpath": "/nodes/vop/parameter", "scheme": "Node", "type": "link"}, " with the names of attributes to specify inputs.\nSet a parameter as \"exported\" to allow writing to/creating the corresponding attribute."]}, {"body": [{"body": [{"body": [{"body": [{"indent": 4, "type": "para", "text": ["Where to get the program to modify attributes."]}, {"body": [{"body": [{"indent": 8, "type": "para", "text": ["Use a VOP network inside this node."]}], "indent": 4, "type": "dt", "text": ["Myself"]}, {"body": [{"indent": 8, "type": "para", "text": ["Use SHOP node containing a CVEX VOP network.\n        Specify the node in the ", {"text": ["SHOP path"], "type": "ui"}, " parameter."]}, {"indent": 8, "type": "para", "text": ["This can also point to any node that contains a CVEX VOP Network."]}, {"body": [{"body": [{"indent": 12, "type": "para", "text": ["Referenced nodes parameters will be used."]}], "indent": 8, "role": "item", "type": "note"}], "container": true, "role": "item_group", "type": "note_group"}], "indent": 4, "type": "dt", "text": ["SHOP"]}, {"body": [{"indent": 8, "type": "para", "text": ["Use a file containing a CVEX program.\n        Specify the file path in the ", {"text": ["Script"], "type": "ui"}, " parameter."]}], "indent": 4, "type": "dt", "text": ["Script"]}], "container": true, "type": "dt_group"}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["VEX Source"]}, {"body": [{"indent": 4, "type": "para", "text": ["A SHOP node containing a CVEX VOP network,\n    when ", {"text": ["VEX source"], "type": "ui"}, " is ", {"text": ["SHOP"], "type": "ui"}, "."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["SHOP Path"]}, {"body": [{"indent": 4, "type": "para", "text": ["A path to a file containing a CVEX script,\n    when ", {"text": ["VEX source"], "type": "ui"}, " is ", {"text": ["Script"], "type": "ui"}, "."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Script"]}, {"body": [{"indent": 4, "type": "para", "text": ["When ", {"text": ["VEX source"], "type": "ui"}, " is ", {"text": ["Script"], "type": "ui"}, ", reloads any ", {"text": [".vex"], "type": "code"}, " files to\n    account for changes made outside of Houdini."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Re-load VEX Functions"]}, {"body": [{"indent": 4, "type": "para", "text": ["When ", {"text": ["VEX source"], "type": "ui"}, " is ", {"text": ["Myself"], "type": "ui"}, ", the command line Houdini uses\n    to compile the VOP network inside this node."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Compiler"]}, {"body": [{"indent": 4, "type": "para", "text": ["When ", {"text": ["VEX source"], "type": "ui"}, " is ", {"text": ["Myself"], "type": "ui"}, ", recompiles the VOP network\n    inside this node."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Force Compile"]}, {"body": [{"indent": 4, "type": "para", "text": ["VEX functions like ", {"text": ["ch()"], "type": "code"}, " usually evaluate with respect to this node.\n    Enter a node path here to override where the path search starts from.\n    This is useful for embedding in a digital asset, where you want searches\n    to start from the asset root."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Evaluation Node Path"]}, {"body": [{"indent": 4, "type": "para", "text": ["When a VEX parameter is exported, the bound attribute will be\n    created if it doesn\u2019t exist.  This pattern can be used to override\n    the export option on the VEX shader to avoid writing to or creating\n    certain attributes.  The pattern matches the VEX parameter, not\n    the bound attribute.  The attribute will still be bound for\n    reading."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Export Parameters"]}, {"body": [{"indent": 4, "type": "para", "text": ["There should be no threading issues with VEX.  In the unlikely\n    event that there are, this will allow you to determine which\n    node is guilty, and work around it without turning off threading\n    on a global scale."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Enable Multithreading"]}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Vex Setup"], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "text": ["Only run the VOP network on this group in the input geometry.\n    Leave this blank to modify all the input geometry."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Group"]}, {"body": [{"indent": 4, "type": "para", "text": ["What the group is made of."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Group Type"]}, {"body": [{"indent": 4, "type": "para", "text": ["What class of geometry attributes to modify.\n    No attributes will be bound, except read-only detail attributes, when set to ", {"text": ["Numbers"], "type": "ui"}, "."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Run Over"]}, {"body": [{"indent": 4, "type": "para", "text": ["Iteration count when ", {"text": ["Run Over"], "type": "ui"}, " is set to ", {"text": ["Numbers"], "type": "ui"}, ".\n    ", {"text": ["@elemnum"], "type": "code"}, " will be the iteration number from 0 (inclusive), to this number (exclusive),\n    and ", {"text": ["@numelem"], "type": "code"}, " will be this number.\n    No attributes will be bound when in this mode, except read-only detail attributes."]}], "indent": 0, "text": ["Number Count"], "role": "item", "attrs": {"id": "vex_numcount"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["Maximum number of iterations run at a time in any thread when ", {"text": ["Run Over"], "type": "ui"}, " is set to ", {"text": ["Numbers"], "type": "ui"}, ". If this is greater than or equal to ", {"text": ["Number Count"], "type": "ui"}, ", the VEX code will run single-threaded. If each iteration will take a very large amount of time, set this to 1. However, there is quite often a significant advantage to making this value larger, especially if each iteration will take a small amount of time, and if any work can avoid being duplicated by running multiple iterations at a time."]}], "indent": 0, "text": ["Thread Job Size"], "role": "item", "attrs": {"id": "vex_threadjobsize"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["Automatically bind attributes to parameters by name.\n    If for some reason you need CVEX parameters to have different names\n    than the corresponding attributes, turn this off and use the ", {"text": ["Number of bindings"], "type": "ui"}, " parameter to set up mappings between ", {"text": ["Attribute name"], "type": "ui"}, " and ", {"text": ["VEX parameter"], "type": "ui"}, "."]}, {"indent": 4, "type": "para", "text": ["Integer attributes will bind to integer parameters.\n    Float attributes will bind to float, vector, point, matrix, or matrix4 depending on their tuple size. String attributes will bind to strings."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Autobind by Name"]}, {"body": [{"indent": 4, "type": "para", "text": ["Automatically bind any groups to the integer parameter prefixed with ", {"text": ["group_"], "type": "code"}, "."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Autobind Groups by Name"]}, {"body": [{"indent": 4, "type": "para", "text": ["If points are being run over, and the ", {"text": ["P"], "type": "code"}, " attribute is written to,\n    but the ", {"text": ["N"], "type": "code"}, " attribute is not written to, any incoming normals will\n    become out of date.  When this option is set, vertex and point\n    normals will be updated when this occurs."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Update Normals If Displaced"]}, {"body": [{"indent": 4, "type": "para", "text": ["The ", {"text": ["@opinput", {"text": ["inputnum"], "type": "var"}, "_", {"text": ["name"], "type": "var"}], "type": "code"}, " syntax lets you get the value of an attribute from the corresponding element on another input. If this parameter is blank, the \"corresponding\" element is the element with the same index (e.g. point number) as the element the node is currently processing. If you specify the name of an attribute, the \"corresponding\" element is the element that has the same value in the named attribute as the current element. See ", {"_hs_sc": true, "fragment": "#other_inputs", "text": ["accessing attributes from other inputs"], "value": "/vex/snippets#other_inputs", "fullpath": "/vex/snippets#other_inputs", "scheme": null, "type": "link"}, " on the VEX snippets page for more information."]}, {"indent": 4, "type": "para", "text": ["For example, if you used ", {"text": ["id"], "type": "code"}, " as the \"attribute to match\", and you were processing a point with attribute ", {"text": ["id"], "type": "code"}, " set to ", {"text": ["12"], "type": "code"}, ", then ", {"text": ["@opinput1_P"], "type": "code"}, " would give you the ", {"text": ["P"], "type": "code"}, " attribute on the point in the second input that also has ", {"text": ["id"], "type": "code"}, " set to ", {"text": ["12"], "type": "code"}, "."]}], "indent": 0, "text": ["Attribute to Match"], "role": "item", "attrs": {"id": "vex_matchattrib"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["When compiled the Attribute VOP is able to work on the incoming\n    geometry in place without making a copy of it.  This can speed\n    up processing as one less copy is made, but requires that the\n    VEX code doesn\u2019t bind for writing any attributes that are\n    read from the first input."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Compute Results In Place"]}, {"body": [{"indent": 4, "type": "para", "text": ["The name of a group to use as the output selection.  When the highlight flag is enabled for this node, this group will be the output selection used by later modeling tools (if it exists)."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Output Selection Group"]}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Data Bindings"], "container": true, "type": "h", "id": null}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "bullet", "text": [{"_hs_sc": true, "text": "", "value": "/nodes/sop/attribcreate", "fullpath": "/nodes/sop/attribcreate", "scheme": "Node", "type": "link"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": [{"_hs_sc": true, "text": "", "value": "/nodes/sop/attribexpression", "fullpath": "/nodes/sop/attribexpression", "scheme": "Node", "type": "link"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": [{"_hs_sc": true, "text": "", "value": "/nodes/sop/attribwrangle", "fullpath": "/nodes/sop/attribwrangle", "scheme": "Node", "type": "link"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": [{"_hs_sc": true, "text": "", "value": "/nodes/sop/point", "fullpath": "/nodes/sop/point", "scheme": "Node", "type": "link"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": [{"_hs_sc": true, "text": "", "value": "/nodes/sop/pointwrangle", "fullpath": "/nodes/sop/pointwrangle", "scheme": "Node", "type": "link"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "container": true, "type": "related_section", "id": "related"}], "summary": ["Runs a VOP network to modify geometry attributes."], "type": "root", "attrs": {"version": null, "tags": "attrs, vops", "namespace": null, "internal": "attribvop", "context": "sop", "type": "node", "icon": "SOP/attribvop"}, "title": ["Attribute VOP"]}