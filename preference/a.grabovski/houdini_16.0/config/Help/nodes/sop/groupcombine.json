{"body": [{"indent": 0, "text": ["Group Combine"], "type": "title", "level": 0}, {"indent": 0, "type": "summary", "text": ["Combines point groups, primitive groups, or edge groups according to boolean operations."]}, {"body": [{"indent": 0, "type": "para", "text": ["Group Combine creates new groups that are the boolean combination of\nexisting groups or ad hoc pattern groups."]}], "indent": 0, "level": 2, "text": ["Overview"], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "text": ["The geometry on which to create the groups."]}], "indent": 0, "type": "dt", "text": ["Source geometry"]}], "container": true, "type": "dt_group"}], "indent": 0, "level": 1, "text": "Inputs", "role": "section", "container": true, "type": "inputs_section", "id": "inputs"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "text": ["The number of groups to create via combination rules."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Number of Combines"]}, {"body": [{"indent": 4, "type": "para", "text": ["The type of group on which to operate. While it can usually\n    be determined from the given groups, this parameter is\n    useful to resolve ambiguous cases."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Group Type"]}, {"body": [{"indent": 4, "type": "para", "text": ["This section allows you to create a new group out of existing groups. \n    Enter the group to operate on or create in the first field and the name of \n    the existing group in the field on the other side of the buttons. You can \n    either include the contents of the other group by selecting \n    ", {"text": ["Equals"], "type": "ui"}, " or everything that is not the other \n    group by selecting ", {"text": ["Equals All But"], "type": "ui"}, ". Use \n    the fields below to combine additional groups."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Group"]}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "bullet", "text": [{"_hs_sc": true, "text": "", "value": "/nodes/sop/groupcombine", "fullpath": "/nodes/sop/groupcombine", "scheme": "Node", "type": "link"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": [{"_hs_sc": true, "text": "", "value": "/nodes/sop/groupdelete", "fullpath": "/nodes/sop/groupdelete", "scheme": "Node", "type": "link"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": [{"_hs_sc": true, "text": "", "value": "/nodes/sop/groupexpression", "fullpath": "/nodes/sop/groupexpression", "scheme": "Node", "type": "link"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": [{"_hs_sc": true, "text": "", "value": "/nodes/sop/grouppromote", "fullpath": "/nodes/sop/grouppromote", "scheme": "Node", "type": "link"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": [{"_hs_sc": true, "text": "", "value": "/nodes/sop/grouprename", "fullpath": "/nodes/sop/grouprename", "scheme": "Node", "type": "link"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": [{"_hs_sc": true, "text": "", "value": "/nodes/sop/grouptransfer", "fullpath": "/nodes/sop/grouptransfer", "scheme": "Node", "type": "link"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": [{"_hs_sc": true, "text": "", "value": "/nodes/sop/groupcopy", "fullpath": "/nodes/sop/groupcopy", "scheme": "Node", "type": "link"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": [{"_hs_sc": true, "text": "", "value": "/nodes/sop/groupcreate", "fullpath": "/nodes/sop/groupcreate", "scheme": "Node", "type": "link"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": [{"_hs_sc": true, "text": "", "value": "/nodes/sop/grouptransfer", "fullpath": "/nodes/sop/grouptransfer", "scheme": "Node", "type": "link"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "container": true, "type": "related_section", "id": "related"}], "summary": ["Combines point groups, primitive groups, or edge groups according to boolean operations."], "type": "root", "attrs": {"version": null, "tags": "groups", "namespace": null, "internal": "groupcombine", "context": "sop", "type": "node", "icon": "SOP/groupcombine"}, "title": ["Group Combine"]}