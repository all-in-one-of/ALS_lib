{"body": [{"indent": 0, "text": ["Volume from Attribute"], "type": "title", "level": 0}, {"indent": 0, "type": "summary", "text": ["Sets the voxels of a volume from point attributes."]}, {"indent": 0, "type": "para", "text": ["The Volume from Attribute SOP copies a point attribute into the voxels of volumes.\nThis is the opposite operation of the ", {"_hs_sc": true, "text": ["Attrib From Volume SOP"], "value": "/nodes/sop/attribfromvolume", "fullpath": "/nodes/sop/attribfromvolume", "scheme": "Node", "type": "link"}, "."]}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "text": ["The volume primitives in the first input to be written to."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Volume Group"]}, {"body": [{"indent": 8, "type": "para", "text": ["The points in the second input to read attribute values from."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Point Group"]}, {"body": [{"indent": 8, "type": "para", "text": ["The name of the point attribute that will be copied to the\n        destination volume.  If this is disabled, the operation will proceed as\n        if an attribute of value 1 is used.  This is useful for creating mask\n        from where the points are present."]}, {"indent": 8, "type": "para", "text": ["If the attribute is not present, it is treated as a value of 1."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Attribute"]}, {"body": [{"indent": 12, "type": "para", "text": ["If this parameter is set and the specified attribute is not present, the\n            operation is bypassed rather than treating it as a ghost value of 1."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Disable if Attribute Missing"]}, {"body": [{"indent": 8, "type": "para", "text": ["If accumulation mode is set each particle will only affect the\n        eight voxels whose centers that it is closest to. A trilinear\n        interpolation will be done to scale the particle\u2019s value for\n        each of those voxels according to how close the particle is to\n        the center of the voxel. "]}, {"indent": 8, "type": "para", "text": ["When used with the Add calculation method, this has the advantage of preserving the total value of the particle attributes."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Accumulated"]}, {"body": [{"indent": 8, "type": "para", "text": ["If a voxel cell is outside of the radius of any particles, it\n        will use the value of the nearest particle. Extrapolation can be\n        expensive when performed far away from dense particle sets."]}, {"indent": 8, "type": "para", "text": ["You can also determine if extrapolation should be capped at a certain\n        number of voxel cells or absolute distance from the particles. This\n        allows you to fill holes in the particle data without having to\n        extrapolate for the entire voxel volume, which can get very expensive."]}, {"indent": 8, "type": "para", "text": ["The maximum of the cell extrapolation and the raw distance\n        extrapolation is used as the extrapolation cap."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Extrapolated"]}, {"body": [{"indent": 8, "type": "para", "text": ["The number of cells to extrapolate. This value is multiplied by\n        the maximum cell dimension and used as a distance cap for how\n        far away from the particle system that extrapolation should\n        occur."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Max Extrap Cells"]}, {"body": [{"indent": 8, "type": "para", "text": ["The maximum distance extrapolate.  "]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Max Extrapolation Distance"]}, {"body": [{"indent": 8, "type": "para", "text": ["The total weight contributed by particles to the cell are\n        normalized if it is greater than the threshold. If the weight is\n        less than the threshold, the particle attribute values will not\n        be normalized and hence drop to zero."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Threshold"]}, {"body": [{"indent": 8, "type": "para", "text": ["This value is only used if ", {"text": ["Extrapolation"], "type": "ui"}, " is turned off. The\n        bandwidth is specified in cells, so the value is multiplied by\n        the largest cell dimension. "]}, {"indent": 8, "type": "para", "text": ["All particles have their effective radii increased by the bandwidth value. This can ensure small radius particles are always sampled in a resolution independent\n        manner."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Bandwidth"]}, {"body": [{"indent": 8, "type": "para", "text": ["Scales the particle\u2019s value by the inverse of the destination\n        field\u2019s voxel volume.  "]}, {"indent": 8, "type": "para", "text": ["This is most useful in the ", {"text": ["Accumulated"], "type": "ui"}, " mode where it ensures a particle will add the same number total units to the field regardless of field resolution. Higher resolution fields will merely receive a denser allocation."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Scale by Voxel Volume"]}, {"body": [{"indent": 8, "type": "para", "text": ["The value of the destination field is ", {"text": ["A"], "type": "code"}, ", the value of the source\n        attribute is ", {"text": ["B"], "type": "code"}, ". The value ", {"text": ["D"], "type": "code"}, " is written to the destination field."]}, {"body": [{"body": [{"indent": 12, "type": "para", "text": [{"text": ["D = B"], "type": "code"}]}], "indent": 8, "type": "dt", "text": ["Copy"]}, {"body": [{"indent": 12, "type": "para", "text": [{"text": ["D = A + B"], "type": "code"}]}], "indent": 8, "type": "dt", "text": ["Add"]}, {"body": [{"indent": 12, "type": "para", "text": [{"text": ["D = A - B"], "type": "code"}]}], "indent": 8, "type": "dt", "text": ["Subtract"]}, {"body": [{"indent": 12, "type": "para", "text": [{"text": ["D = A * B"], "type": "code"}]}], "indent": 8, "type": "dt", "text": ["Multiply"]}, {"body": [{"indent": 12, "type": "para", "text": [{"text": ["D = A / B"], "type": "code"}]}], "indent": 8, "type": "dt", "text": ["Divide"]}, {"body": [{"indent": 12, "type": "para", "text": [{"text": ["D = max(A, B)"], "type": "code"}]}], "indent": 8, "type": "dt", "text": ["Maximum"]}, {"body": [{"indent": 12, "type": "para", "text": [{"text": ["D = min(A, B)"], "type": "code"}]}], "indent": 8, "type": "dt", "text": ["Minimum"]}], "container": true, "type": "dt_group"}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Calculation"]}, {"body": [{"indent": 8, "type": "para", "text": ["The ", {"text": ["A"], "type": "code"}, " in the calculation is set to ", {"text": ["A' = A * m + a"], "type": "code"}, ", where ", {"text": ["m"], "type": "code"}, " is the\n        ", {"text": ["Dest Pre-Mul"], "type": "ui"}, " and ", {"text": ["a"], "type": "code"}, " the ", {"text": ["Dest Pre-Add"], "type": "ui"}, "."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Dest Pre-Add, Dest Pre-Mul"]}, {"body": [{"indent": 8, "type": "para", "text": ["The ", {"text": ["B"], "type": "code"}, " in the calculation is set to ", {"text": ["B' = B * m + a"], "type": "code"}, ", where ", {"text": ["m"], "type": "code"}, " is the\n        ", {"text": ["Source Pre-Mul"], "type": "ui"}, " and ", {"text": ["a"], "type": "code"}, " the ", {"text": ["Source Pre-Add"], "type": "ui"}, "."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Source Pre-Add, Source Pre-Mul"]}, {"body": [{"indent": 8, "type": "para", "text": ["The ", {"text": ["result"], "type": "code"}, " that the destination field is set to is modified\n        by ", {"text": ["result' = result * m + a,"], "type": "code"}, " where ", {"text": ["m"], "type": "code"}, " is the ", {"text": ["Post-Mul"], "type": "ui"}, " and ", {"text": ["a"], "type": "code"}, "\n        is the ", {"text": ["Post-Add"], "type": "ui"}, "."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Post-Add, Post-Mul"]}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"indent": 4, "type": "para", "text": ["You can use this node as a quick way to copy the ", {"text": ["pscale"], "type": "code"}, " dependent values into a fog volume."]}], "indent": 0, "role": "item", "type": "tip"}], "container": true, "role": "item_group", "type": "tip_group"}, {"body": [{"body": [{"indent": 4, "blevel": 6, "type": "bullet", "text": [{"_hs_sc": true, "text": "", "value": "/nodes/sop/attribfromvolume", "fullpath": "/nodes/sop/attribfromvolume", "scheme": "Node", "type": "link"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "text": [{"_hs_sc": true, "text": "", "value": "/nodes/sop/volumemix", "fullpath": "/nodes/sop/volumemix", "scheme": "Node", "type": "link"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "text": [{"_hs_sc": true, "text": "", "value": "/nodes/sop/isooffset", "fullpath": "/nodes/sop/isooffset", "scheme": "Node", "type": "link"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "text": [{"_hs_sc": true, "text": "", "value": "/nodes/sop/iso", "fullpath": "/nodes/sop/iso", "scheme": "Node", "type": "link"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "container": true, "type": "related_section", "id": "related"}], "summary": ["Sets the voxels of a volume from point attributes."], "type": "root", "attrs": {"version": null, "tags": "volumes, merge", "namespace": null, "internal": "volumefromattrib", "context": "sop", "type": "node", "icon": "SOP/volumefromattrib"}, "title": ["Volume from Attribute"]}