{"body": [{"indent": 0, "text": ["VDB Visualize Tree"], "type": "title", "level": 0}, {"indent": 0, "type": "summary", "text": ["Replaces a VDB volume with geometry that visualizes its structure."]}, {"type": "para", "indent": 0, "text": ["See ", {"_hs_sc": true, "text": ["volumes"], "value": "/model/volumes", "fullpath": "/model/volumes", "scheme": null, "type": "link"}, " for an explanation of standard volumes and OpenVDB volumes."]}, {"indent": 0, "type": "para", "text": ["This node may be useful to experts for checking if the VDB volume is wasting memory."]}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "text": ["The name(s) of VDB primitives in the input to visualize.\n    See ", {"_hs_sc": true, "fragment": "#group", "text": ["specifying volumes"], "value": "/model/volumes#group", "fullpath": "/model/volumes#group", "scheme": null, "type": "link"}, "."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Group"]}, {"body": [{"indent": 4, "type": "para", "text": ["Specify whether to draw in color (which adds the ", {"text": ["Cd"], "type": "code"}, " attribute)."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Color"]}, {"body": [{"indent": 4, "type": "para", "text": ["For VDB primitives created based on a frustum, draw the corresponding frustum bounding box.\n    See the ", {"text": ["Frustum"], "type": "ui"}, " and ", {"text": ["From camera"], "type": "ui"}, " modes of the ", {"_hs_sc": true, "text": ["VDB node"], "value": "/nodes/sop/vdb", "fullpath": "/nodes/sop/vdb", "scheme": "Node", "type": "link"}, "."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Frustrum"]}, {"body": [{"indent": 4, "type": "para", "text": ["When enabled, it will draw leaf nodes with the specified method.\n    If ", {"text": ["Color"], "type": "ui"}, " is enabled, they are drawn in blue."]}, {"body": [{"body": [{"indent": 12, "type": "para", "text": ["Draw as wireframe boxes."]}], "indent": 4, "type": "dt", "text": ["Wireframe Boxes"]}, {"body": [{"indent": 8, "type": "para", "text": ["Draw as solid boxes."]}], "indent": 4, "type": "dt", "text": ["Solid Boxes"]}], "container": true, "type": "dt_group"}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Leaf Nodes"]}, {"body": [{"indent": 4, "type": "para", "text": ["When enabled, it will draw non-leaf nodes with the specified method.\n    If ", {"text": ["Color"], "type": "code"}, " is enabled, the first internal node level is shown in green,\n    otherwise shown in orange."]}, {"body": [{"body": [{"indent": 8, "type": "para", "text": ["Draw as wireframe boxes."]}], "indent": 4, "type": "dt", "text": ["Wireframe Boxes"]}, {"body": [{"indent": 8, "type": "para", "text": ["Draw as solid boxes."]}], "indent": 4, "type": "dt", "text": ["Solid Boxes"]}], "container": true, "type": "dt_group"}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Internal Nodes"]}, {"body": [{"indent": 4, "type": "para", "text": ["When enabled, draw nodes that are active but hold the default (empty) value in the specified method.\n    Positive values are red, negative values are white."]}, {"body": [{"body": [{"indent": 8, "type": "para", "text": ["Draw a single point in the middle of each node."]}], "indent": 4, "type": "dt", "text": ["Points"]}, {"body": [{"indent": 12, "type": "para", "text": ["Draw as wireframe boxes."]}], "indent": 4, "type": "dt", "text": ["Wireframe Boxes"]}, {"body": [{"indent": 8, "type": "para", "text": ["Draw as solid boxes."]}], "indent": 4, "type": "dt", "text": ["Solid Boxes"]}], "container": true, "type": "dt_group"}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Active Tiles"]}, {"body": [{"indent": 4, "type": "para", "text": ["When enabled, draw active voxels in the specified method.\n    They are colored red if positive valued, white if negative valued."]}, {"body": [{"body": [{"indent": 8, "type": "para", "text": ["Draw a single point in the middle of each voxel."]}], "indent": 4, "type": "dt", "text": ["Points"]}, {"body": [{"indent": 12, "type": "para", "text": ["Draw as wireframe boxes."]}], "indent": 4, "type": "dt", "text": ["Wireframe Boxes"]}, {"body": [{"indent": 8, "type": "para", "text": ["Draw as solid boxes."]}], "indent": 4, "type": "dt", "text": ["Solid Boxes"]}], "container": true, "type": "dt_group"}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Active Voxels"]}, {"body": [{"indent": 4, "type": "para", "text": ["Draw staggered vectors as if they were collocated."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Ignore Staggered Vectors"]}, {"body": [{"indent": 4, "type": "para", "text": ["Add a voxel/tile index coordinate attribute to points."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Points with Index Coordinates"]}, {"body": [{"indent": 4, "type": "para", "text": ["Add a voxel/tile value attribute to points."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Points with Values"]}, {"body": [{"indent": 4, "type": "para", "text": ["When enabled, name the attribute added by ", {"text": ["Points with Values"], "type": "ui"}, " the same as\n    its VDB grid name.  If disabled or if a VDB grid has no name, the point\n    attributes will named according to their type such as ", {"text": ["vdb_int"], "type": "code"}, ",\n    ", {"text": ["vdb_float"], "type": "code"}, ", or ", {"text": ["vdb_vec3f"], "type": "code"}, "."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Name Point Attributes After Grids"]}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "bullet", "text": [{"_hs_sc": true, "text": "", "value": "/nodes/sop/convertvdb", "fullpath": "/nodes/sop/convertvdb", "scheme": "Node", "type": "link"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "container": true, "type": "related_section", "id": "related"}], "title": ["VDB Visualize Tree"], "summary": ["Replaces a VDB volume with geometry that visualizes its structure."], "attrs": {"version": null, "tags": "vdbs", "namespace": null, "internal": "vdbvisualizetree", "context": "sop", "type": "node", "icon": "COMMON/openvdb"}, "included": ["/nodes/sop/volume_types.txt"], "type": "root"}