{"body": [{"indent": 0, "text": ["Merge"], "type": "title", "level": 0}, {"indent": 0, "type": "summary", "text": [" Merges multiple streams of objects or data into a single stream.\n"]}, {"indent": 0, "type": "para", "text": ["The Merge DOP takes any number of separate streams of objects or data\nand merges them into a single stream. Data and objects cannot be merged\ninto a single stream. All inputs must be object streams, or all inputs\nmust be data."]}, {"indent": 0, "type": "para", "text": ["Merging objects does not imply any relationship between those objects.\nHowever, for convenience, the Affector Relationship\nparameter can be turned on to create affector relationships between the\ndifferent streams of objects. The same functionality can be achieved\nwith Group and Affector DOPs, but many more nodes would be required.\nObjects with the Intangible Value set will not have a relationship\ncreated by a merge node."]}, {"indent": 0, "type": "para", "text": ["When merging data, any connection to this node\u2019s output will be treated\nas if every input of this node is connected to it. This is useful when\ndealing with digital assets which provides only a single data input but\nto which you may wish to attach several pieces of data. "]}, {"indent": 0, "type": "para", "text": ["Similarly, this\nnode can be used to allow a digital asset to output several pieces of\ndata through a single data output. This node also provides a convenient\nvisual method of grouping several pieces of data into a single stream\nfor easier wiring."]}, {"body": [{"body": [{"indent": 4, "type": "para", "text": ["Bypassing this node disables the relationship calculations and\n    only processes the first input."]}], "indent": 0, "role": "item", "type": "note"}], "container": true, "role": "item_group", "type": "note_group"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "text": ["When this parameter value is zero no relationships will be\n        added.  When it is one, the Affector Relationship will control\n        the addition of relationships.  In any case, the objects are\n        merged into a single stream."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Activation"]}, {"body": [{"indent": 8, "type": "para", "text": ["If this node is merging streams of simulation objects, this\n        parameter sets up affector relationships between the objects."]}, {"body": [{"body": [{"indent": 12, "type": "para", "text": ["No new affector relationships are created between the input\n            objects."]}], "indent": 8, "type": "dt", "text": ["No Change"]}, {"body": [{"indent": 12, "type": "para", "text": ["Given a series of inputs 1, 2, 3, and so on, the objects\n            connected to input 1 become affectors for the objects on\n            inputs 2, 3, and so on. The objects at input 2 become\n            affectors of the objects at input 3 and beyond. Using this\n            option will cause the input objects to be solved in the\n            order in which they are connected to this node."]}], "indent": 8, "type": "dt", "text": ["Left Inputs Affect Right Inputs"]}, {"body": [{"indent": 12, "type": "para", "text": ["All objects on all input streams become mutual affectors."]}], "indent": 8, "type": "dt", "text": ["Mutual"]}], "container": true, "type": "dt_group"}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Affector Relationship"]}, {"body": [{"indent": 8, "type": "para", "text": ["When merging streams of objects, this determines what sort of\n        relationship should be created between the streams.  Useful\n        choices are:"]}, {"body": [{"body": [{"indent": 12, "type": "para", "text": ["No affector relationship is created - the same as setting\n            No Change in the Affector Relationship field."]}], "indent": 8, "type": "dt", "text": ["None"]}, {"body": [{"indent": 12, "type": "para", "text": ["Used internally to define two objects that have a\n            constraint between them."]}], "indent": 8, "type": "dt", "text": ["Constraint"]}, {"body": [{"indent": 12, "type": "para", "text": ["Affected objects will set their local velocities to match\n            the velocity of the source object.  Applies to fluid\n            objects."]}], "indent": 8, "type": "dt", "text": ["Pump"]}, {"body": [{"indent": 12, "type": "para", "text": ["Affected objects will delete their volume where it\n            contacts the affectors.  Applies to fluid objects."]}], "indent": 8, "type": "dt", "text": ["Sink"]}, {"body": [{"indent": 12, "type": "para", "text": ["Used internally to make objects part of the same group."]}], "indent": 8, "type": "dt", "text": ["Group"]}, {"body": [{"indent": 12, "type": "para", "text": ["Affected objects will respond to collisions from affector\n            objects."]}], "indent": 8, "type": "dt", "text": ["Collide"]}, {"body": [{"indent": 12, "type": "para", "text": ["A place holder affector for user defined effects.\n            Used by the ", {"_hs_sc": true, "text": ["Gas Target Forces"], "value": "/nodes/dop/gastargetforce", "fullpath": "/nodes/dop/gastargetforce", "scheme": "Node", "type": "link"}, "."]}], "indent": 8, "type": "dt", "text": ["Target"]}, {"body": [{"indent": 12, "type": "para", "text": ["Affected objects will use the affector objects as sources\n            for operations such as creating liquid or smoke density."]}], "indent": 8, "type": "dt", "text": ["Source"]}, {"body": [{"indent": 12, "type": "para", "text": ["Enforces a particular solve order - affected objects will\n            be solved after affector objects - but no other intrinsic\n            meaning.  "]}, {"indent": 12, "type": "para", "text": ["This is useful when SOP Solvers refer to other\n            objects creating a dependency that isn\u2019t visible to the\n            DOP Engine."]}], "indent": 8, "type": "dt", "text": ["Empty"]}], "container": true, "type": "dt_group"}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Relationship"]}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "text": ["All the objects or data connected to the inputs of this node\n        are fed out through the single output."]}], "indent": 4, "type": "dt", "text": ["All"]}], "container": true, "type": "dt_group"}], "indent": 0, "level": 1, "text": "Inputs", "role": "section", "container": true, "type": "inputs_section", "id": "inputs"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "text": ["All the objects or data connected to the inputs of this node\n        are fed out through the single output."]}], "indent": 4, "type": "dt", "text": ["First"]}], "container": true, "type": "dt_group"}], "indent": 0, "level": 1, "text": "Outputs", "role": "section", "container": true, "type": "outputs_section", "id": "outputs"}, {"body": [{"body": [{"body": [{"type": "para", "indent": 4, "text": ["This value is the simulation time for which the node is being\n    evaluated. "]}, {"type": "para", "indent": 4, "text": ["This value may not be equal to the current Houdini time\n    represented by the variable T, depending on the settings of the ", {"_hs_sc": true, "text": ["DOP\n    Network"], "value": "/nodes/obj/dopnet", "fullpath": "/nodes/obj/dopnet", "scheme": "Node", "type": "link"}, " ", {"text": ["Offset Time"], "type": "ui"}, " and ", {"text": ["Time Scale"], "type": "ui"}, "\n    parameters. "]}, {"type": "para", "indent": 4, "text": ["This value is guaranteed to have a value of zero at the\n    start of a simulation, so when testing for the first timestep of a\n    simulation, it is best to use a test like ", {"text": ["$ST == 0"], "type": "code"}, " rather than\n    ", {"text": ["$T == 0"], "type": "code"}, " or ", {"text": ["$FF == 1"], "type": "code"}, "."]}], "type": "dt", "indent": 0, "text": ["ST"]}, {"body": [{"type": "para", "indent": 4, "text": ["This value is the simulation frame (or more accurately, the\n    simulation time step number) for which the node is being evaluated."]}, {"type": "para", "indent": 4, "text": ["This value may not be equal to the current Houdini frame number\n    represented by the variable F, depending on the settings of the ", {"_hs_sc": true, "text": ["DOP\n    Network"], "value": "/nodes/obj/dopnet", "fullpath": "/nodes/obj/dopnet", "scheme": "Node", "type": "link"}, " parameters. Instead, this value is equal to\n    the simulation time (ST) divided by the simulation timestep size\n    (TIMESTEP)."]}], "type": "dt", "indent": 0, "text": ["SF"]}, {"body": [{"type": "para", "indent": 4, "text": ["This value is the size of a simulation timestep. This value is\n    useful to scale values that are expressed in units per second, but\n    are applied on each timestep."]}], "type": "dt", "indent": 0, "text": ["TIMESTEP"]}, {"body": [{"type": "para", "indent": 4, "text": ["This value is the inverse of the TIMESTEP value. It is the number\n    of timesteps per second of simulation time."]}], "type": "dt", "indent": 0, "text": ["SFPS"]}, {"body": [{"type": "para", "indent": 4, "text": ["This is the number of objects in the simulation. For nodes that\n    create objects such as the ", {"_hs_sc": true, "text": ["Empty Object"], "value": "/nodes/dop/emptyobject", "fullpath": "/nodes/dop/emptyobject", "scheme": "Node", "type": "link"}, " node,\n    this value will increase for each object that is evaluated. "]}, {"type": "para", "indent": 4, "text": ["A good way to guarantee unique object names is to use an expression\n    like ", {"text": ["object_$SNOBJ"], "type": "code"}, "."]}], "type": "dt", "indent": 0, "text": ["SNOBJ"]}, {"body": [{"type": "para", "indent": 4, "text": ["This value is the number of objects that will be evaluated by the\n    current node during this timestep. This value will often be\n    different from SNOBJ, as many nodes do not process all the objects\n    in a simulation. "]}, {"type": "para", "indent": 4, "text": ["This value may return 0 if the node does not\n    process each object sequentially (such as the ", {"_hs_sc": true, "text": ["Group\n    DOP"], "value": "/nodes/dop/group", "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link"}, ")."]}], "type": "dt", "indent": 0, "text": ["NOBJ"]}, {"body": [{"type": "para", "indent": 4, "text": ["This value is the index of the specific object being processed by\n    the node. This value will always run from zero to NOBJ-1 in a given\n    timestep. This value does not identify the current object within the\n    simulation like OBJID or OBJNAME, just the object\u2019s position in the\n    current order of processing. "]}, {"type": "para", "indent": 4, "text": ["This value is useful for generating a\n    random number for each object, or simply splitting the objects into\n    two or more groups to be processed in different ways. This value\n    will be -1 if the node does not process objects sequentially (such\n    as the ", {"_hs_sc": true, "text": ["Group DOP"], "value": "/nodes/dop/group", "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link"}, ")."]}], "type": "dt", "indent": 0, "text": ["OBJ"]}, {"body": [{"type": "para", "indent": 4, "text": ["This is the unique object identifier for the object being\n    processed. Every object is assigned an integer value that is unique\n    among all objects in the simulation for all time. Even if an object\n    is deleted, its identifier is never reused. "]}, {"type": "para", "indent": 4, "text": ["The object identifier\n    can always be used to uniquely identify a given object. This makes\n    this variable very useful in situations where each object needs to\n    be treated differently. It can be used to produce a unique random\n    number for each object, for example. "]}, {"type": "para", "indent": 4, "text": ["This value is also the best way\n    to look up information on an object using the dopfield expression\n    function. This value will be -1 if the node does not process objects\n    sequentially (such as the ", {"_hs_sc": true, "text": ["Group DOP"], "value": "/nodes/dop/group", "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link"}, ")."]}], "type": "dt", "indent": 0, "text": ["OBJID"]}, {"body": [{"type": "para", "indent": 4, "text": ["This string contains a space separated list of the unique object\n    identifiers for every object being processed by the current node."]}], "type": "dt", "indent": 0, "text": ["ALLOBJIDS"]}, {"body": [{"type": "para", "indent": 4, "text": ["This string contains a space separated list of the names of every\n    object being processed by the current node."]}], "type": "dt", "indent": 0, "text": ["ALLOBJNAMES"]}, {"body": [{"type": "para", "indent": 4, "text": ["This value is the simulation time (see variable ST) at which the\n    current object was created. "]}, {"type": "para", "indent": 4, "text": ["Therefore, to check if an object was created\n    on the current timestep, the expression ", {"text": ["$ST == $OBJCT"], "type": "code"}, " should\n    always be used. This value will be zero if the node does not process\n    objects sequentially (such as the ", {"_hs_sc": true, "text": ["Group DOP"], "value": "/nodes/dop/group", "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link"}, ")."]}], "type": "dt", "indent": 0, "text": ["OBJCT"]}, {"body": [{"type": "para", "indent": 4, "text": ["This value is the simulation frame (see variable SF) at which the\n    current object was created. "]}, {"type": "para", "indent": 4, "text": ["This value is equivalent to using the\n    dopsttoframe expression on the OBJCT variable. This value will be\n    zero if the node does not process objects sequentially (such as the\n    ", {"_hs_sc": true, "text": ["Group DOP"], "value": "/nodes/dop/group", "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link"}, ")."]}], "type": "dt", "indent": 0, "text": ["OBJCF"]}, {"body": [{"type": "para", "indent": 4, "text": ["This is a string value containing the name of the object being\n    processed. "]}, {"type": "para", "indent": 4, "text": ["Object names are not guaranteed to be unique within a\n    simulation. However, if you name your objects carefully so that they\n    are unique, the object name can be a much easier way to identify an\n    object than the unique object identifier, OBJID. "]}, {"type": "para", "indent": 4, "text": ["The object name can\n    also be used to treat a number of similar objects (with the same\n    name) as a virtual group. If there are 20 objects named \"myobject\",\n    specifying ", {"text": ["strcmp($OBJNAME, \"myobject\") == 0"], "type": "code"}, " in the activation field\n    of a DOP will cause that DOP to operate only on those 20 objects. This\n    value will be the empty string if the node does not process objects\n    sequentially (such as the ", {"_hs_sc": true, "text": ["Group DOP"], "value": "/nodes/dop/group", "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link"}, ")."]}], "type": "dt", "indent": 0, "text": ["OBJNAME"]}, {"body": [{"type": "para", "indent": 4, "text": ["This is a string value containing the full path of the current DOP\n    Network. This value is most useful in DOP subnet digital assets\n    where you want to know the path to the DOP Network that contains the\n    node."]}], "type": "dt", "indent": 0, "text": ["DOPNET"]}], "type": "dt_group", "container": true}, {"body": [{"body": [{"type": "para", "indent": 4, "text": ["Most dynamics nodes have local variables with the same names as the\n    node\u2019s parameters. For example, in a ", {"_hs_sc": true, "text": ["Position node"], "value": "/nodes/dop/position", "fullpath": "/nodes/dop/position", "scheme": "Node", "type": "link"}, ",\n    you could write the expression:"]}, {"lang": null, "type": "pre", "indent": 4, "text": ["\n    $tx + 0.1\n    "]}, {"type": "para", "indent": 4, "text": ["\u2026to make the object move 0.1 units along the X axis at each timestep."]}], "role": "item", "indent": 0, "type": "note"}], "role": "item_group", "container": true, "type": "note_group"}], "indent": 0, "level": 1, "text": "Locals", "role": "section", "container": true, "type": "locals_section", "id": "locals"}, {"body": [{"body": [{"indent": 4, "blevel": 6, "type": "bullet", "text": [{"_hs_sc": true, "text": "", "value": "/nodes/dop/null", "fullpath": "/nodes/dop/null", "scheme": "Node", "type": "link"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "text": [{"_hs_sc": true, "text": "", "value": "/nodes/dop/split", "fullpath": "/nodes/dop/split", "scheme": "Node", "type": "link"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "text": [{"_hs_sc": true, "text": "", "value": "/nodes/dop/switch", "fullpath": "/nodes/dop/switch", "scheme": "Node", "type": "link"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "text": [{"_hs_sc": true, "text": "", "value": "/nodes/dop/intangiblevalue", "fullpath": "/nodes/dop/intangiblevalue", "scheme": "Node", "type": "link"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "container": true, "type": "related_section", "id": "related"}], "title": ["Merge"], "summary": [" Merges multiple streams of objects or data into a single stream.\n"], "attrs": {"version": null, "namespace": null, "internal": "merge", "context": "dop", "type": "node", "icon": "DOP/merge"}, "included": ["/nodes/dop/standard_locals.txt"], "type": "root"}