// Magic: dfdf8848
// Automatically generated PSI dialog (PSI version 16.0.557)
// Fri Apr  7 15:42:04 2017


f_tmp = FLOAT_FIELD;	// dialog.top.ui
execute.row.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

execute.gad = ROW
{
    JUSTIFY(left, center)

    PARM_BUTTON("execute", "Save to Disk")
	push VALUE(execute.val);

}

execute2.gad = ROW
{
    JUSTIFY(left, center)

    PARM_BUTTON("execute2", "Submit Job (Deputat)")
	push VALUE(execute2.val);

}

reload.gad = ROW
{
    JUSTIFY(left, center)

    PARM_BUTTON("reload", "Reload Geometry")
	push VALUE(reload.val);

}

single.gad = ROW
{
    

    {  }
    { WIDTH(0.08) }

    PARM_BUTTON("single", "Single Frame") toggle VALUE(single.val);

    {  }

}
}	// Template join.bot

fromfile.row.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

fromfile.gad = ROW
{
    

    PARM_BUTTON("fromfile", "Read From File") toggle VALUE(fromfile.val);

    {  }

}

tblend.gad = ROW
{
    

    PARM_BUTTON("tblend", "Time Blend") toggle VALUE(tblend.val);

    {  }

}

simmode.gad = ROW
{
    

    PARM_BUTTON("simmode", "Sim Mode") toggle VALUE(simmode.val);

    {  }

}

save_scene.gad = ROW
{
    

    {  }
    { WIDTH(0.08) }

    PARM_BUTTON("save_scene", "Save Scene") toggle VALUE(save_scene.val);

    {  }

}
}	// Template join.bot


trange.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH

    PARM_LABEL_SIMPLE("Valid Frame Range", "trange") WIDTH(1.5);
    { WIDTH(0.09) }

    trange.menu;

    { HSTRETCH }

}

f.gad = ROW
{
   HSTRETCH

   f.label = PARM_LABEL("Start/End/Inc", "f") WIDTH(1.5);
   PARM(float, 3, "f", none, none, "#1,#2,#3")
	RANGE(0,10)  LABELREF(f.label)
	HSTRETCH;

}
name.row.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

name.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    name.label = PARM_LABEL("Name", "name") WIDTH(1.5);
    PARM_FIELD(string, "name") VALUE(name.val) 
	LABELREF(name.label) HSTRETCH;

}

ver.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 ver.label = PARM_LABEL("Version", "ver") ;
 PARM(integer, 1, "ver", none, none) RANGE(1,10)
	LOCK_RANGE_MIN LABELREF(ver.label) HSTRETCH;

}

extract.gad = ROW
{
    JUSTIFY(left, center)

    PARM_BUTTON("extract", "Extract File")
	push VALUE(extract.val);

}

browse.gad = ROW
{
    JUSTIFY(left, center)

    PARM_BUTTON("browse", "Browse")
	push VALUE(browse.val);

}

clear.gad = ROW
{
    JUSTIFY(left, center)

    {  }
    { WIDTH(0.1) }

    PARM_BUTTON("clear", "Clear Versions")
	push VALUE(clear.val);

}
}	// Template join.bot


ptdel.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    ptdel.label = PARM_LABEL("Point Attributes", "ptdel") WIDTH(1.5);
    PARM_FIELD(string, "ptdel") VALUE(ptdel.val) 
	LABELREF(ptdel.label) HSTRETCH;

    ptdel.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

}

vtxdel.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    vtxdel.label = PARM_LABEL("Vertex Attributes", "vtxdel") WIDTH(1.5);
    PARM_FIELD(string, "vtxdel") VALUE(vtxdel.val) 
	LABELREF(vtxdel.label) HSTRETCH;

    vtxdel.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

}

primdel.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    primdel.label = PARM_LABEL("Primitive Attributes", "primdel") WIDTH(1.5);
    PARM_FIELD(string, "primdel") VALUE(primdel.val) 
	LABELREF(primdel.label) HSTRETCH;

    primdel.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

}

dtldel.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    dtldel.label = PARM_LABEL("Detail Attributes", "dtldel") WIDTH(1.5);
    PARM_FIELD(string, "dtldel") VALUE(dtldel.val) 
	LABELREF(dtldel.label) HSTRETCH;

    dtldel.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

}
crname.row.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

crname.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    crname.label = PARM_LABEL("Create Group", "crname") WIDTH(1.5);
    PARM_FIELD(string, "crname") VALUE(crname.val) 
	LABELREF(crname.label) HSTRETCH;

}

entity.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 

    PARM_LABEL_SIMPLE("Entity", "entity") ;
    { WIDTH(0.09) }

    entity.menu;

    {  }

}
}	// Template join.bot


destroyname.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    destroyname.label = PARM_LABEL("Delete Group", "destroyname") WIDTH(1.5);
    PARM_FIELD(string, "destroyname") VALUE(destroyname.val) 
	LABELREF(destroyname.label) HSTRETCH;

    destroyname.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

}
tpostrender.row.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
tpostrender.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

tpostrender.gad = PARM_BUTTON("tpostrender", "") toggle VALUE(tpostrender.val);

next.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)

 next.label = PARM_LABEL("Next Render", "next") WIDTH(1.32);
 PARM_FIELD(pathstring, "next") VALUE(next.val) 
	LABELREF(next.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(next.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(next.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;

}
}	
}	// Template join.bot


folder3.gad = 
GROUP simple "Scripts"
{ 
    VALUE(folder3.gad.val) LAYOUT(vertical) HSTRETCH 
	    tpostrender.row.join;		
} 

folder2.gad = 
GROUP simple "Groups"
{ 
    VALUE(folder2.gad.val) LAYOUT(vertical) HSTRETCH 
	    crname.row.join;		
	    destroyname.gad;		
} 

folder1.gad = 
GROUP simple "Delete Attributes"
{ 
    VALUE(folder1.gad.val) LAYOUT(vertical) HSTRETCH 
	    ptdel.gad;		
	    vtxdel.gad;		
	    primdel.gad;		
	    dtldel.gad;		
} 

folder0.gad = 
GROUP simple "General"
{ 
    VALUE(folder0.gad.val) LAYOUT(vertical) HSTRETCH 
	    execute.row.join;		
	    fromfile.row.join;		
	    trange.gad;		
	    f.gad;		
	    name.row.join;		
} 

dialog_norm.gad = 
{
    LAYOUT(vertical) SPACING(0.02) HSTRETCH LOOK(plain) 
    folder0.gad; 
    folder1.gad; 
    folder2.gad; 
    folder3.gad; 
} 
// dialog.bot.ui

extrastuffstowbar_minimize.val := 1;

dialog = OPENNOTIFIER
{
    LAYOUT(vertical) SPACING(0.02) LOOK(bg) VALUE(open.val) HSTRETCH

    { HEIGHT(1p) LOOK(bg) HSTRETCH }

    dialog_norm.gad;
}
