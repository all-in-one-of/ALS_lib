// Magic: 5c488aef
// Automatically generated PSI dialog (PSI version 16.0.557)
// Wed Mar 29 18:43:10 2017


f_tmp = FLOAT_FIELD;	// dialog.top.ui

keeppos.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("keeppos", "Keep Position When Parenting") toggle VALUE(keeppos.val);

    { HSTRETCH }

}

childcomp.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("childcomp", "Child Compensation") toggle VALUE(childcomp.val);

    { HSTRETCH }

}

pre_xform.gad = ROW
{

    { WIDTH(1.5) }
    { WIDTH(0.1) }

    pre_xform.menu;
}
xOrd.row.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

xOrd.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 

    PARM_LABEL_SIMPLE("Transform Order", "xOrd") WIDTH(1.5);
    { WIDTH(0.09) }

    xOrd.menu;

    {  }

}

rOrd.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 

    rOrd.menu;

    {  }

}
}	// Template join.bot


t.gad = ROW
{
   HSTRETCH

   t.label = PARM_LABEL("Translate", "t") WIDTH(1.5);
   PARM(float, 3, "t", none, none, "X,Y,Z")
	RANGE(0,1)  LABELREF(t.label)
	HSTRETCH;

    ACTION_ICONBUTTON "BUTTONS_match_transform" VALUE(t.script_action)
	HELP("Select an object to match the translation with.")
	UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

}

r.gad = ROW
{
   HSTRETCH

   r.label = PARM_LABEL("Rotate", "r") WIDTH(1.5);
   PARM(float, 3, "r", none, none, "X,Y,Z")
	RANGE(0,360)  LABELREF(r.label)
	HSTRETCH;

    ACTION_ICONBUTTON "BUTTONS_match_rotation" VALUE(r.script_action)
	HELP("Select an object to match the rotation with.")
	UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

}

s.gad = ROW
{
   HSTRETCH

   s.label = PARM_LABEL("Scale", "s") WIDTH(1.5);
   PARM(float, 3, "s", none, none, "X,Y,Z")
	RANGE(0,1)  LABELREF(s.label)
	HSTRETCH;

    ACTION_ICONBUTTON "BUTTONS_match_scale" VALUE(s.script_action)
	HELP("Select an object to match the scale with.")
	UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

}

p.gad = ROW
{
   HSTRETCH

   p.label = PARM_LABEL("Pivot", "p") WIDTH(1.5);
   PARM(float, 3, "p", none, none, "X,Y,Z")
	RANGE(0,1)  LABELREF(p.label)
	HSTRETCH;

    ACTION_ICONBUTTON "BUTTONS_match_pivot" VALUE(p.script_action)
	HELP("Select an object to match the pivot with.")
	UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

}

scale.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 scale.label = PARM_LABEL("Uniform Scale", "scale") WIDTH(1.5);
 PARM(float, 1, "scale", none, none) RANGE(0,1)
	 LABELREF(scale.label) HSTRETCH;

}

lookatpath.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)

 lookatpath.label = PARM_LABEL("Look At", "lookatpath") WIDTH(1.5);
 PARM_FIELD(pathstring, "lookatpath") VALUE(lookatpath.val) 
	LABELREF(lookatpath.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(lookatpath.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(lookatpath.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;

}

lookupobjpath.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)

 lookupobjpath.label = PARM_LABEL("Look Up Object", "lookupobjpath") WIDTH(1.5);
 PARM_FIELD(pathstring, "lookupobjpath") VALUE(lookupobjpath.val) 
	LABELREF(lookupobjpath.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(lookupobjpath.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(lookupobjpath.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;

}

lookup.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH

    PARM_LABEL_SIMPLE("Look At Up Vector", "lookup") WIDTH(1.5);
    { WIDTH(0.09) }

    lookup.menu;

    { HSTRETCH }

}

pathobjpath.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)

 pathobjpath.label = PARM_LABEL("Path Object", "pathobjpath") WIDTH(1.5);
 PARM_FIELD(pathstring, "pathobjpath") VALUE(pathobjpath.val) 
	LABELREF(pathobjpath.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(pathobjpath.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(pathobjpath.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;

}

roll.gad = ROW
{
   HSTRETCH

   roll.label = PARM_LABEL( "Roll", "roll" ) WIDTH(1.5);
   PARM(float, 1, "roll", none, none) RANGE(-360, 360)
	LABELREF( roll.label ) HSTRETCH;

}

pos.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 pos.label = PARM_LABEL("Position", "pos") WIDTH(1.5);
 PARM(float, 1, "pos", none, none) RANGE(0,10)
	LOCK_RANGE_MIN LABELREF(pos.label) HSTRETCH;

}

uparmtype.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH

    PARM_LABEL_SIMPLE("Parameterization", "uparmtype") WIDTH(1.5);
    { WIDTH(0.09) }

    uparmtype.menu;

    { HSTRETCH }

}

pathorient.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 pathorient.label = PARM_LABEL("Orient Along Path", "pathorient") WIDTH(1.5);
 PARM(integer, 1, "pathorient", none, none) RANGE(0,1)
	 LABELREF(pathorient.label) HSTRETCH;

}

up.gad = ROW 
{
    HSTRETCH

    up.label = PARM_LABEL("Orient Up Vector", "up") WIDTH(1.5);
    PARM(float, 3, "up", none, none) LABELREF(up.label)
	HSTRETCH;

}

bank.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 bank.label = PARM_LABEL("Auto-Bank factor", "bank") WIDTH(1.5);
 PARM(float, 1, "bank", none, none) RANGE(-1,1)
	 LABELREF(bank.label) HSTRETCH;

}
shop_materialpath.row.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

shop_materialpath.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)

 shop_materialpath.label = PARM_LABEL("Material", "shop_materialpath") WIDTH(1.5);
 PARM_FIELD(pathstring, "shop_materialpath") VALUE(shop_materialpath.val) 
	LABELREF(shop_materialpath.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(shop_materialpath.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(shop_materialpath.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;

}

shop_materialopts.gad = ROW
{

    {  }
    { WIDTH(0.1) }

    shop_materialopts.menu;
}
}	// Template join.bot

tdisplay.row.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
tdisplay.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

tdisplay.gad = PARM_BUTTON("tdisplay", "") toggle VALUE(tdisplay.val);

display.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 display.label = PARM_LABEL("Display", "display") WIDTH(1.32);
 PARM(integer, 1, "display", none, none) RANGE(0,1)
	LOCK_RANGE LABELREF(display.label) HSTRETCH;

}
}	
}	// Template join.bot


vm_rendersubd.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("vm_rendersubd", "Render Polygons As Subdivision (Mantra)") toggle VALUE(vm_rendersubd.val);

    { HSTRETCH }

}

vm_subdstyle.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH

    PARM_LABEL_SIMPLE("Subdivision Style", "vm_subdstyle") WIDTH(1.5);
    { WIDTH(0.09) }

    vm_subdstyle.menu;

    { HSTRETCH }

}

vm_subdgroup.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    vm_subdgroup.label = PARM_LABEL("Subdivision Group", "vm_subdgroup") WIDTH(1.5);
    PARM_FIELD(string, "vm_subdgroup") VALUE(vm_subdgroup.val) 
	LABELREF(vm_subdgroup.label) HSTRETCH;

}

use_dcolor.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("use_dcolor", "Set Wireframe Color") toggle VALUE(use_dcolor.val);

    { HSTRETCH }

}

dcolor.gad = 
{
    LAYOUT (horizontal) HSTRETCH

    dcolor.label = PARM_LABEL("Wireframe Color", "dcolor") WIDTH(1.5);
    PARM(float, 3, "dcolor", none, COLOR, "R,G,B") 
	LABELREF(dcolor.label) HSTRETCH;

}

picking.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("picking", "Viewport Selecting Enabled") toggle VALUE(picking.val);

    { HSTRETCH }

}

pickscript.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

 pickscript.label = PARM_LABEL("Select Script", "pickscript") WIDTH(1.5);

 PARM_FIELD (pathstring, "pickscript") LABELREF(pickscript.label)
	VALUE(pickscript.val) HSTRETCH;

    pickscript.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(pickscript.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

}

caching.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("caching", "Cache Object Transform") toggle VALUE(caching.val);

    { HSTRETCH }

}

vport_shadeopen.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("vport_shadeopen", "Shade Open Curves In Viewport") toggle VALUE(vport_shadeopen.val);

    { HSTRETCH }

}
vport_displayassubdiv.gad = NULL { }

vport_onionskin.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH

    PARM_LABEL_SIMPLE("Onion Skinning", "vport_onionskin") WIDTH(1.5);
    { WIDTH(0.09) }

    vport_onionskin.menu;

    { HSTRETCH }

}

renderable.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("renderable", "Renderable") toggle VALUE(renderable.val);

    { HSTRETCH }

}
constraints_on.gad = NULL { }
constraints_path.gad = NULL { }

stdswitcher5.gad = 
{
    LAYOUT(vertical) HSTRETCH

    TABDIALOG
    { 
	VALUE(stdswitcher5.gad.val) STRETCH(1,0)

	TAB "Transform"
	{
	    LAYOUT(vertical) STRETCH

	    MARGIN(0.05) SPACING(2p)
	    keeppos.gad;		
	    childcomp.gad;		
	    pre_xform.gad;		
	    xOrd.row.join;		
	    t.gad;		
	    r.gad;		
	    s.gad;		
	    p.gad;		
	    scale.gad;		
	    lookatpath.gad;		
	    lookupobjpath.gad;		
	    lookup.gad;		
	    pathobjpath.gad;		
	    roll.gad;		
	    pos.gad;		
	    uparmtype.gad;		
	    pathorient.gad;		
	    up.gad;		
	    bank.gad;		

	    { STRETCH(1,1) LOOK(plain) }
	}

	TAB "Material"
	{
	    LAYOUT(vertical) STRETCH

	    MARGIN(0.05) SPACING(2p)
	    shop_materialpath.row.join;		

	    { STRETCH(1,1) LOOK(plain) }
	}

	TAB "Render"
	{
	    LAYOUT(vertical) STRETCH

	    MARGIN(0.05) SPACING(2p)
	    tdisplay.row.join;		
	    vm_rendersubd.gad;		
	    vm_subdstyle.gad;		
	    vm_subdgroup.gad;		

	    { STRETCH(1,1) LOOK(plain) }
	}

	TAB "Misc"
	{
	    LAYOUT(vertical) STRETCH

	    MARGIN(0.05) SPACING(2p)
	    use_dcolor.gad;		
	    dcolor.gad;		
	    picking.gad;		
	    pickscript.gad;		
	    caching.gad;		
	    vport_shadeopen.gad;		
	    vport_displayassubdiv.gad;		
	    vport_onionskin.gad;		
	    renderable.gad;		

	    { STRETCH(1,1) LOOK(plain) }
	}
    } 
}

dialog_norm.gad = 
{
    LAYOUT(vertical) SPACING(0.02) HSTRETCH LOOK(plain) 
    stdswitcher5.gad; 
    constraints_on.gad; 
    constraints_path.gad; 
} 
// dialog.bot.ui

extrastuffstowbar_minimize.val := 1;

dialog = OPENNOTIFIER
{
    LAYOUT(vertical) SPACING(0.02) LOOK(bg) VALUE(open.val) HSTRETCH

    { HEIGHT(1p) LOOK(bg) HSTRETCH }

    dialog_norm.gad;
}
