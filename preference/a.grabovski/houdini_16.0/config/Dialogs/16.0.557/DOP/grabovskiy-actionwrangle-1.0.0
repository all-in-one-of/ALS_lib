// Magic: 6efd2956
// Automatically generated PSI dialog (PSI version 16.0.557)
// Fri Mar 31 15:30:29 2017


f_tmp = FLOAT_FIELD;	// dialog.top.ui

mode.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH

    PARM_LABEL_SIMPLE("Wrangle Mode", "mode") WIDTH(1.5);
    { WIDTH(0.09) }

    mode.menu;

    { HSTRETCH }

}
type.gad = NULL { }

activate.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 activate.label = PARM_LABEL("Activation", "activate") WIDTH(1.5);
 PARM(float, 1, "activate", none, none) RANGE(0,1)
	 LABELREF(activate.label) HSTRETCH;

}

bindgroup.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    bindgroup.label = PARM_LABEL("Group", "bindgroup") WIDTH(1.5);
    PARM_FIELD(string, "bindgroup") VALUE(bindgroup.val) 
	LABELREF(bindgroup.label) HSTRETCH;

}
usegroup.row.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
usegroup.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

usegroup.gad = PARM_BUTTON("usegroup", "") toggle VALUE(usegroup.val);

partgroup.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    partgroup.label = PARM_LABEL("Group", "partgroup") WIDTH(1.32);
    PARM_FIELD(string, "partgroup") VALUE(partgroup.val) 
	LABELREF(partgroup.label) HSTRETCH;

    partgroup.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

}
}	
}	// Template join.bot


bindgrouptype.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH

    PARM_LABEL_SIMPLE("Group Type", "bindgrouptype") WIDTH(1.5);
    { WIDTH(0.09) }

    bindgrouptype.menu;

    { HSTRETCH }

}

bindclass.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH

    PARM_LABEL_SIMPLE("Run Over", "bindclass") WIDTH(1.5);
    { WIDTH(0.09) }

    bindclass.menu;

    { HSTRETCH }

}

vex_numcount.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 vex_numcount.label = PARM_LABEL("Number Count", "vex_numcount") WIDTH(1.5);
 PARM(integer, 1, "vex_numcount", none, none) RANGE(0,10000)
	LOCK_RANGE_MIN LABELREF(vex_numcount.label) HSTRETCH;

}

vex_threadjobsize.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 vex_threadjobsize.label = PARM_LABEL("Thread Job Size", "vex_threadjobsize") WIDTH(1.5);
 PARM(integer, 1, "vex_threadjobsize", none, none) RANGE(1,10000)
	LOCK_RANGE_MIN LABELREF(vex_threadjobsize.label) HSTRETCH;

}
replace.row.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

replace.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    replace.label = PARM_LABEL("Replace With", "replace") WIDTH(1.5);
    PARM_FIELD(string, "replace") VALUE(replace.val) 
	LABELREF(replace.label) HSTRETCH;

    replace.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

}

menutype.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 

    PARM_LABEL_SIMPLE("        Snippet Menu", "menutype") ;
    { WIDTH(0.09) }

    menutype.menu;

    {  }

    ACTION_ICONBUTTON "$JOB/icons/standart/BUTTONS/delete.svg" VALUE(menutype.script_action)
	HELP("Clear Snippet")
	UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

}
}	// Template join.bot


snippet1.gad = ROW
{

    HSTRETCH JUSTIFY(left, top)

    snippet1.label = PARM_LABEL("VEXpression", "snippet1") WIDTH(1.5);

    MULTILINE_PARM_FIELD ("snippet1") 
    	LABELREF(snippet1.label) 
    	VALUE(snippet1.val) 
    	SYNTAX("vex") 
    	LINES(20,40) 
    	HSTRETCH;

    snippet1.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

    ACTION_ICONBUTTON "BUTTONS_create_parm_from_ch" VALUE(snippet1.script_action)
	HELP("Creates spare parameters for each unique call of ch() ")
	UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

}

snippet2.gad = ROW
{

    HSTRETCH JUSTIFY(left, top)

    snippet2.label = PARM_LABEL("VEXpression", "snippet2") WIDTH(1.5);

    MULTILINE_PARM_FIELD ("snippet2") 
    	LABELREF(snippet2.label) 
    	VALUE(snippet2.val) 
    	SYNTAX("vex") 
    	LINES(20,40) 
    	HSTRETCH;

    snippet2.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

    ACTION_ICONBUTTON "BUTTONS_create_parm_from_ch" VALUE(snippet2.script_action)
	HELP("Creates spare parameters for each unique call of ch() ")
	UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

}

snippet3.gad = ROW
{

    HSTRETCH JUSTIFY(left, top)

    snippet3.label = PARM_LABEL("VEXpression", "snippet3") WIDTH(1.5);

    MULTILINE_PARM_FIELD ("snippet3") 
    	LABELREF(snippet3.label) 
    	VALUE(snippet3.val) 
    	SYNTAX("vex") 
    	LINES(20,40) 
    	HSTRETCH;

    snippet3.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

    ACTION_ICONBUTTON "BUTTONS_create_parm_from_ch" VALUE(snippet3.script_action)
	HELP("Creates spare parameters for each unique call of ch() ")
	UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

}

exportlist.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    exportlist.label = PARM_LABEL("Fields to Write to", "exportlist") WIDTH(1.5);
    PARM_FIELD(string, "exportlist") VALUE(exportlist.val) 
	LABELREF(exportlist.label) HSTRETCH;

}

exportlist2.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    exportlist2.label = PARM_LABEL("Attributes to Create", "exportlist2") WIDTH(1.5);
    PARM_FIELD(string, "exportlist2") VALUE(exportlist2.val) 
	LABELREF(exportlist2.label) HSTRETCH;

}

clearchans.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("clearchans", "Destroy Unused Cannels") toggle VALUE(clearchans.val);

    { HSTRETCH }

}

vex_strict.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("vex_strict", "Enforce Prototypes") toggle VALUE(vex_strict.val);

    { HSTRETCH }

}

usetimestep.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("usetimestep", "Use Timestep") toggle VALUE(usetimestep.val);

    { HSTRETCH }

}

timescale.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 timescale.label = PARM_LABEL("Timescale", "timescale") WIDTH(1.5);
 PARM(float, 1, "timescale", none, none) RANGE(0,10)
	 LABELREF(timescale.label) HSTRETCH;

}

bindgeo.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    bindgeo.label = PARM_LABEL("Geometry", "bindgeo") WIDTH(1.5);
    PARM_FIELD(string, "bindgeo") VALUE(bindgeo.val) 
	LABELREF(bindgeo.label) HSTRETCH;

}

vex_cwdpath.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)

 vex_cwdpath.label = PARM_LABEL("Evaluation Node Path", "vex_cwdpath") WIDTH(1.5);
 PARM_FIELD(pathstring, "vex_cwdpath") VALUE(vex_cwdpath.val) 
	LABELREF(vex_cwdpath.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(vex_cwdpath.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(vex_cwdpath.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;

}

vex_outputmask.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    vex_outputmask.label = PARM_LABEL("Export Parameters", "vex_outputmask") WIDTH(1.5);
    PARM_FIELD(string, "vex_outputmask") VALUE(vex_outputmask.val) 
	LABELREF(vex_outputmask.label) HSTRETCH;

}

autobind.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("autobind", "Autobind by Name") toggle VALUE(autobind.val);

    { HSTRETCH }

}

bindings.parm =
{
    LAYOUT(horizontal) SPACING(0.02) HSTRETCH JUSTIFY(left, center)

    PARM_LABEL_SIMPLE("Attribute Bindings", "bindings") WIDTH(1.5);
    { WIDTH(0.08) }

    ROW
    {
	HSTRETCH(0.5) JUSTIFY(left, center)  VALUE(bindings.val)

        bindings.field = PARM_FIELD (integer, "bindings")
				VALUE(bindings.val) HSTRETCH(0.5)
				 PREF_WIDTH(0.5);

        ROW
        {
	     LOOK(lightline) VMARGIN(1p)

   	     INCREMENT_ICONBUTTON VALUE(bindings.more.val)	
	    	HELP("Add Another Instance") SIZE(0.2, 0.24);
	     DECREMENT_ICONBUTTON VALUE(bindings.less.val)	
	        HELP("Remove Last Instance") SIZE(0.2, 0.24);

	}

	ACTION_BUTTON "Clear" VALUE(bindings.clear.val);
    }

    { HSTRETCH }
}

bindings.multilist = 
{
    LAYOUT(vertical) STRETCH MARGIN(0.05)
}

bindings.gad =
{
    LAYOUT(vertical) STRETCH SPACING(0.02)

    bindings.parm;
    bindings.multilist;
}

bindfield_num.parm =
{
    LAYOUT(horizontal) SPACING(0.02) HSTRETCH JUSTIFY(left, center)

    PARM_LABEL_SIMPLE("Field Bindings", "bindfield_num") WIDTH(1.5);
    { WIDTH(0.08) }

    ROW
    {
	HSTRETCH(0.5) JUSTIFY(left, center)  VALUE(bindfield_num.val)

        bindfield_num.field = PARM_FIELD (integer, "bindfield_num")
				VALUE(bindfield_num.val) HSTRETCH(0.5)
				 PREF_WIDTH(0.5);

        ROW
        {
	     LOOK(lightline) VMARGIN(1p)

   	     INCREMENT_ICONBUTTON VALUE(bindfield_num.more.val)	
	    	HELP("Add Another Instance") SIZE(0.2, 0.24);
	     DECREMENT_ICONBUTTON VALUE(bindfield_num.less.val)	
	        HELP("Remove Last Instance") SIZE(0.2, 0.24);

	}

	ACTION_BUTTON "Clear" VALUE(bindfield_num.clear.val);
    }

    { HSTRETCH }
}

bindfield_num.multilist = 
{
    LAYOUT(vertical) STRETCH MARGIN(0.05)
}

bindfield_num.gad =
{
    LAYOUT(vertical) STRETCH SPACING(0.02)

    bindfield_num.parm;
    bindfield_num.multilist;
}

groupautobind.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("groupautobind", "Autobind Groups by Name") toggle VALUE(groupautobind.val);

    { HSTRETCH }

}

groupbindings.parm =
{
    LAYOUT(horizontal) SPACING(0.02) HSTRETCH JUSTIFY(left, center)

    PARM_LABEL_SIMPLE("Group Bindings", "groupbindings") WIDTH(1.5);
    { WIDTH(0.08) }

    ROW
    {
	HSTRETCH(0.5) JUSTIFY(left, center)  VALUE(groupbindings.val)

        groupbindings.field = PARM_FIELD (integer, "groupbindings")
				VALUE(groupbindings.val) HSTRETCH(0.5)
				 PREF_WIDTH(0.5);

        ROW
        {
	     LOOK(lightline) VMARGIN(1p)

   	     INCREMENT_ICONBUTTON VALUE(groupbindings.more.val)	
	    	HELP("Add Another Instance") SIZE(0.2, 0.24);
	     DECREMENT_ICONBUTTON VALUE(groupbindings.less.val)	
	        HELP("Remove Last Instance") SIZE(0.2, 0.24);

	}

	ACTION_BUTTON "Clear" VALUE(groupbindings.clear.val);
    }

    { HSTRETCH }
}

groupbindings.multilist = 
{
    LAYOUT(vertical) STRETCH MARGIN(0.05)
}

groupbindings.gad =
{
    LAYOUT(vertical) STRETCH SPACING(0.02)

    groupbindings.parm;
    groupbindings.multilist;
}

vex_updatenmls.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("vex_updatenmls", "Update Normals If Displaced") toggle VALUE(vex_updatenmls.val);

    { HSTRETCH }

}

bindinputmenu1.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH

    PARM_LABEL_SIMPLE("Input 1", "bindinputmenu1") WIDTH(1.5);
    { WIDTH(0.09) }

    bindinputmenu1.menu;

    { HSTRETCH }

}

bindgeoinput1.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)

 bindgeoinput1.label = PARM_LABEL("SOP Path", "bindgeoinput1") WIDTH(1.5);
 PARM_FIELD(pathstring, "bindgeoinput1") VALUE(bindgeoinput1.val) 
	LABELREF(bindgeoinput1.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(bindgeoinput1.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(bindgeoinput1.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;

}

binddopinput1.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    binddopinput1.label = PARM_LABEL("DOP Data", "binddopinput1") WIDTH(1.5);
    PARM_FIELD(string, "binddopinput1") VALUE(binddopinput1.val) 
	LABELREF(binddopinput1.label) HSTRETCH;

}

bindinputmenu2.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH

    PARM_LABEL_SIMPLE("Input 2", "bindinputmenu2") WIDTH(1.5);
    { WIDTH(0.09) }

    bindinputmenu2.menu;

    { HSTRETCH }

}

bindgeoinput2.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)

 bindgeoinput2.label = PARM_LABEL("SOP Path", "bindgeoinput2") WIDTH(1.5);
 PARM_FIELD(pathstring, "bindgeoinput2") VALUE(bindgeoinput2.val) 
	LABELREF(bindgeoinput2.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(bindgeoinput2.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(bindgeoinput2.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;

}

binddopinput2.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    binddopinput2.label = PARM_LABEL("DOP Data", "binddopinput2") WIDTH(1.5);
    PARM_FIELD(string, "binddopinput2") VALUE(binddopinput2.val) 
	LABELREF(binddopinput2.label) HSTRETCH;

}

bindinputmenu3.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH

    PARM_LABEL_SIMPLE("Input 3", "bindinputmenu3") WIDTH(1.5);
    { WIDTH(0.09) }

    bindinputmenu3.menu;

    { HSTRETCH }

}

bindgeoinput3.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)

 bindgeoinput3.label = PARM_LABEL("SOP Path", "bindgeoinput3") WIDTH(1.5);
 PARM_FIELD(pathstring, "bindgeoinput3") VALUE(bindgeoinput3.val) 
	LABELREF(bindgeoinput3.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(bindgeoinput3.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(bindgeoinput3.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;

}

binddopinput3.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    binddopinput3.label = PARM_LABEL("DOP Data", "binddopinput3") WIDTH(1.5);
    PARM_FIELD(string, "binddopinput3") VALUE(binddopinput3.val) 
	LABELREF(binddopinput3.label) HSTRETCH;

}

bindinputmenu4.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH

    PARM_LABEL_SIMPLE("Input 4", "bindinputmenu4") WIDTH(1.5);
    { WIDTH(0.09) }

    bindinputmenu4.menu;

    { HSTRETCH }

}

bindgeoinput4.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)

 bindgeoinput4.label = PARM_LABEL("SOP Path", "bindgeoinput4") WIDTH(1.5);
 PARM_FIELD(pathstring, "bindgeoinput4") VALUE(bindgeoinput4.val) 
	LABELREF(bindgeoinput4.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(bindgeoinput4.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(bindgeoinput4.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;

}

binddopinput4.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    binddopinput4.label = PARM_LABEL("DOP Data", "binddopinput4") WIDTH(1.5);
    PARM_FIELD(string, "binddopinput4") VALUE(binddopinput4.val) 
	LABELREF(binddopinput4.label) HSTRETCH;

}

bindinputmenu5.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH

    PARM_LABEL_SIMPLE("Input 1", "bindinputmenu5") WIDTH(1.5);
    { WIDTH(0.09) }

    bindinputmenu5.menu;

    { HSTRETCH }

}

bindgeoinput5.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)

 bindgeoinput5.label = PARM_LABEL("SOP Path", "bindgeoinput5") WIDTH(1.5);
 PARM_FIELD(pathstring, "bindgeoinput5") VALUE(bindgeoinput5.val) 
	LABELREF(bindgeoinput5.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(bindgeoinput5.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(bindgeoinput5.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;

}

binddopinput5.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    binddopinput5.label = PARM_LABEL("DOP Data", "binddopinput5") WIDTH(1.5);
    PARM_FIELD(string, "binddopinput5") VALUE(binddopinput5.val) 
	LABELREF(binddopinput5.label) HSTRETCH;

}

bindinputmenu6.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH

    PARM_LABEL_SIMPLE("Input 2", "bindinputmenu6") WIDTH(1.5);
    { WIDTH(0.09) }

    bindinputmenu6.menu;

    { HSTRETCH }

}

bindgeoinput6.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)

 bindgeoinput6.label = PARM_LABEL("SOP Path", "bindgeoinput6") WIDTH(1.5);
 PARM_FIELD(pathstring, "bindgeoinput6") VALUE(bindgeoinput6.val) 
	LABELREF(bindgeoinput6.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(bindgeoinput6.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(bindgeoinput6.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;

}

binddopinput6.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    binddopinput6.label = PARM_LABEL("DOP Data", "binddopinput6") WIDTH(1.5);
    PARM_FIELD(string, "binddopinput6") VALUE(binddopinput6.val) 
	LABELREF(binddopinput6.label) HSTRETCH;

}

bindinputmenu7.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH

    PARM_LABEL_SIMPLE("Input 3", "bindinputmenu7") WIDTH(1.5);
    { WIDTH(0.09) }

    bindinputmenu7.menu;

    { HSTRETCH }

}

bindgeoinput7.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)

 bindgeoinput7.label = PARM_LABEL("SOP Path", "bindgeoinput7") WIDTH(1.5);
 PARM_FIELD(pathstring, "bindgeoinput7") VALUE(bindgeoinput7.val) 
	LABELREF(bindgeoinput7.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(bindgeoinput7.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(bindgeoinput7.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;

}

binddopinput7.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    binddopinput7.label = PARM_LABEL("DOP Data", "binddopinput7") WIDTH(1.5);
    PARM_FIELD(string, "binddopinput7") VALUE(binddopinput7.val) 
	LABELREF(binddopinput7.label) HSTRETCH;

}

bindinputmenu8.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH

    PARM_LABEL_SIMPLE("Input 4", "bindinputmenu8") WIDTH(1.5);
    { WIDTH(0.09) }

    bindinputmenu8.menu;

    { HSTRETCH }

}

bindgeoinput8.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)

 bindgeoinput8.label = PARM_LABEL("SOP Path", "bindgeoinput8") WIDTH(1.5);
 PARM_FIELD(pathstring, "bindgeoinput8") VALUE(bindgeoinput8.val) 
	LABELREF(bindgeoinput8.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(bindgeoinput8.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(bindgeoinput8.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;

}

binddopinput8.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    binddopinput8.label = PARM_LABEL("DOP Data", "binddopinput8") WIDTH(1.5);
    PARM_FIELD(string, "binddopinput8") VALUE(binddopinput8.val) 
	LABELREF(binddopinput8.label) HSTRETCH;

}

bindinputmenu9.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH

    PARM_LABEL_SIMPLE("Input 1", "bindinputmenu9") WIDTH(1.5);
    { WIDTH(0.09) }

    bindinputmenu9.menu;

    { HSTRETCH }

}

bindgeoinput9.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)

 bindgeoinput9.label = PARM_LABEL("SOP Path", "bindgeoinput9") WIDTH(1.5);
 PARM_FIELD(pathstring, "bindgeoinput9") VALUE(bindgeoinput9.val) 
	LABELREF(bindgeoinput9.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(bindgeoinput9.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(bindgeoinput9.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;

}

binddopinput9.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    binddopinput9.label = PARM_LABEL("DOP Data", "binddopinput9") WIDTH(1.5);
    PARM_FIELD(string, "binddopinput9") VALUE(binddopinput9.val) 
	LABELREF(binddopinput9.label) HSTRETCH;

}

bindinputmenu10.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH

    PARM_LABEL_SIMPLE("Input 2", "bindinputmenu10") WIDTH(1.5);
    { WIDTH(0.09) }

    bindinputmenu10.menu;

    { HSTRETCH }

}

bindgeoinput10.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)

 bindgeoinput10.label = PARM_LABEL("SOP Path", "bindgeoinput10") WIDTH(1.5);
 PARM_FIELD(pathstring, "bindgeoinput10") VALUE(bindgeoinput10.val) 
	LABELREF(bindgeoinput10.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(bindgeoinput10.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(bindgeoinput10.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;

}

binddopinput10.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    binddopinput10.label = PARM_LABEL("DOP Data", "binddopinput10") WIDTH(1.5);
    PARM_FIELD(string, "binddopinput10") VALUE(binddopinput10.val) 
	LABELREF(binddopinput10.label) HSTRETCH;

}

bindinputmenu11.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH

    PARM_LABEL_SIMPLE("Input 3", "bindinputmenu11") WIDTH(1.5);
    { WIDTH(0.09) }

    bindinputmenu11.menu;

    { HSTRETCH }

}

bindgeoinput11.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)

 bindgeoinput11.label = PARM_LABEL("SOP Path", "bindgeoinput11") WIDTH(1.5);
 PARM_FIELD(pathstring, "bindgeoinput11") VALUE(bindgeoinput11.val) 
	LABELREF(bindgeoinput11.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(bindgeoinput11.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(bindgeoinput11.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;

}

binddopinput11.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    binddopinput11.label = PARM_LABEL("DOP Data", "binddopinput11") WIDTH(1.5);
    PARM_FIELD(string, "binddopinput11") VALUE(binddopinput11.val) 
	LABELREF(binddopinput11.label) HSTRETCH;

}

bindinputmenu12.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH

    PARM_LABEL_SIMPLE("Input 4", "bindinputmenu12") WIDTH(1.5);
    { WIDTH(0.09) }

    bindinputmenu12.menu;

    { HSTRETCH }

}

bindgeoinput12.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)

 bindgeoinput12.label = PARM_LABEL("SOP Path", "bindgeoinput12") WIDTH(1.5);
 PARM_FIELD(pathstring, "bindgeoinput12") VALUE(bindgeoinput12.val) 
	LABELREF(bindgeoinput12.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(bindgeoinput12.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(bindgeoinput12.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;

}

binddopinput12.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    binddopinput12.label = PARM_LABEL("DOP Data", "binddopinput12") WIDTH(1.5);
    PARM_FIELD(string, "binddopinput12") VALUE(binddopinput12.val) 
	LABELREF(binddopinput12.label) HSTRETCH;

}
file.row.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

file.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

 file.label = PARM_LABEL("Vex File", "file") WIDTH(1.5);

 PARM_FIELD (pathstring, "file") LABELREF(file.label)
	VALUE(file.val) HSTRETCH;

    file.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(file.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

}

save.gad = ROW
{
    JUSTIFY(left, center)

    PARM_BUTTON("save", "Save")
	push VALUE(save.val);

}

load.gad = ROW
{
    JUSTIFY(left, center)

    PARM_BUTTON("load", "Load")
	push VALUE(load.val);

}

edit.gad = ROW
{
    JUSTIFY(left, center)

    PARM_BUTTON("edit", "Editor")
	push VALUE(edit.val);

}

browse.gad = ROW
{
    JUSTIFY(left, center)

    {  }
    { WIDTH(0.1) }

    PARM_BUTTON("browse", "Browse")
	push VALUE(browse.val);

}
}	// Template join.bot


version.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 version.label = PARM_LABEL("Version", "version") WIDTH(1.5);
 PARM(integer, 1, "version", none, none) RANGE(1,10)
	LOCK_RANGE_MIN LABELREF(version.label) HSTRETCH;

}

folder2.gad = 
GROUP simple "Data Bindings"
{ 
    VALUE(folder2.gad.val) LAYOUT(vertical) HSTRETCH 
	    autobind.gad;		
	    bindings.gad;		
	    bindfield_num.gad;		
	    groupautobind.gad;		
	    groupbindings.gad;		
	    vex_updatenmls.gad;		
} 

folder0.gad = 
{
    LAYOUT(vertical) HSTRETCH

    TABDIALOG
    { 
	VALUE(folder0.gad.val) STRETCH(1,0)

	TAB "Code"
	{
	    LAYOUT(vertical) STRETCH

	    MARGIN(0.05) SPACING(2p)
	    mode.gad;		
	    type.gad;		
	    activate.gad;		
	    bindgroup.gad;		
	    usegroup.row.join;		
	    bindgrouptype.gad;		
	    bindclass.gad;		
	    vex_numcount.gad;		
	    vex_threadjobsize.gad;		
	    replace.row.join;		
	    snippet1.gad;		
	    snippet2.gad;		
	    snippet3.gad;		
	    exportlist.gad;		
	    exportlist2.gad;		
	    clearchans.gad;		
	    vex_strict.gad;		
	    usetimestep.gad;		
	    timescale.gad;		

	    { STRETCH(1,1) LOOK(plain) }
	}

	TAB "Bindings"
	{
	    LAYOUT(vertical) STRETCH

	    MARGIN(0.05) SPACING(2p)
	    bindgeo.gad;		
	    vex_cwdpath.gad;		
	    vex_outputmask.gad;		
	    folder2.gad;		

	    { STRETCH(1,1) LOOK(plain) }
	}

	TAB "Inputs"
	{
	    LAYOUT(vertical) STRETCH

	    MARGIN(0.05) SPACING(2p)
	    bindinputmenu1.gad;		
	    bindgeoinput1.gad;		
	    binddopinput1.gad;		
	    bindinputmenu2.gad;		
	    bindgeoinput2.gad;		
	    binddopinput2.gad;		
	    bindinputmenu3.gad;		
	    bindgeoinput3.gad;		
	    binddopinput3.gad;		
	    bindinputmenu4.gad;		
	    bindgeoinput4.gad;		
	    binddopinput4.gad;		

	    { STRETCH(1,1) LOOK(plain) }
	}

	TAB "Inputs"
	{
	    LAYOUT(vertical) STRETCH

	    MARGIN(0.05) SPACING(2p)
	    bindinputmenu5.gad;		
	    bindgeoinput5.gad;		
	    binddopinput5.gad;		
	    bindinputmenu6.gad;		
	    bindgeoinput6.gad;		
	    binddopinput6.gad;		
	    bindinputmenu7.gad;		
	    bindgeoinput7.gad;		
	    binddopinput7.gad;		
	    bindinputmenu8.gad;		
	    bindgeoinput8.gad;		
	    binddopinput8.gad;		

	    { STRETCH(1,1) LOOK(plain) }
	}

	TAB "Inputs"
	{
	    LAYOUT(vertical) STRETCH

	    MARGIN(0.05) SPACING(2p)
	    bindinputmenu9.gad;		
	    bindgeoinput9.gad;		
	    binddopinput9.gad;		
	    bindinputmenu10.gad;		
	    bindgeoinput10.gad;		
	    binddopinput10.gad;		
	    bindinputmenu11.gad;		
	    bindgeoinput11.gad;		
	    binddopinput11.gad;		
	    bindinputmenu12.gad;		
	    bindgeoinput12.gad;		
	    binddopinput12.gad;		

	    { STRETCH(1,1) LOOK(plain) }
	}
    } 
}

dialog_norm.gad = 
{
    LAYOUT(vertical) SPACING(0.02) HSTRETCH LOOK(plain) 
    folder0.gad; 
    file.row.join; 
    version.gad; 
} 
// dialog.bot.ui

extrastuffstowbar_minimize.val := 1;

dialog = OPENNOTIFIER
{
    LAYOUT(vertical) SPACING(0.02) LOOK(bg) VALUE(open.val) HSTRETCH

    { HEIGHT(1p) LOOK(bg) HSTRETCH }

    dialog_norm.gad;
}
